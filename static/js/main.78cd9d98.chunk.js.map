{"version":3,"sources":["app/GlobalStyle.tsx","components/YamlEditor/YamlEditor.tsx","components/AutoSave/AutoSave.tsx","components/Board/Board.tsx","components/common/Actions.tsx","components/common/Select.tsx","utils/common.ts","components/uidl/Button.tsx","components/uidl/Image.tsx","components/uidl/Input.tsx","components/uidl/Label.tsx","components/uidl/Div.tsx","components/uidl/Select.tsx","app/client.ts","hooks/useYamlEditor.tsx","hooks/useSelectPage.tsx","hooks/useSelectDevice.tsx","hooks/useUIDL.tsx","App.tsx","AppContext.tsx","AuthProvider.tsx","AuthContext.tsx","AppProvider.tsx","serviceWorker.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","StyledYamlEditorRoot","styled","div","YamlEditor","props","TextField","name","rows","rowsMax","label","InputLabelProps","classes","root","variant","color","spellCheck","InputProps","notchedOutline","margin","autoFocus","multiline","fullWidth","AutoSave","autoSave","storedKey","storedObj","render","children","interval","React","useState","cache","setCache","autoSaveRef","useRef","id","useMemo","save","storedData","window","localStorage","getItem","JSON","parse","error","console","date","String","Date","toISOString","nextStoredItem","nextStoredObj","num","obj","keys","Object","reverse","length","reduce","acc","key","cutBy","setItem","stringify","log","useEffect","current","setInterval","clearInterval","StyledBox","Box","height","BoardHeader","sublabel","Typography","align","style","display","Board","rest","StyledRoot","StyledSpace","Actions","component","Component","childrenProp","Children","toArray","map","child","childIndex","isValidElement","Fragment","cloneElement","StyledSelect","Select","options","SelectProps","shrink","outlined","select","value","MenuItem","msg","args","str","push","data","bind","Button","type","componentId","src","uidl","styles","outline","cursor","fontSize","css","base","borderStyle","button","backgroundColor","alt","width","Image","image","parseComponent","position","title","border","Input","inputType","onChangeProp","onChange","setValue","textField","indexOf","split","e","target","Label","Div","Array","isArray","index","selectOptions","option","prynote","Prynote","apiVersion","env","initialState","yml","parsedYml","useYamlEditor","initialValue","delay","delayProp","pageName","useImmer","state","setState","setDelay","parseYml","yaml","draft","setYml","persist","toSelectPageOptions","pages","page","useSelectPage","navigate","selectedPage","setSelectedPage","selectPage","useCallback","selectPageOptions","devices","galaxyS5","sizes","iPhone5","iPhone6_7_8","iPhone6_7_8_Plus","iPad","selectDeviceOptions","deviceKey","useSelectDevice","selectedDevice","setSelectedDevice","selectDevice","config","baseCss","basePage","initialPageYml","useUIDL","baseUrl","location","params","uidlEndpoint","a","getUIDL","pathname","startPage","init","url","axios","get","pageYml","alert","message","onSelectDevice","onSelectPage","UIDLDiv","background","undefined","App","history","match","vw","setVw","vh","setVh","theme","useTheme","isWidescreen","useMediaQuery","breakpoints","only","device","Grid","minHeight","overflowX","justify","direction","container","xs","sm","md","lg","xl","item","paddingLeft","paddingRight","overflow","components","UIDLSelect","viewportWidth","viewportHeight","context","createContext","authenticated","status","verification","code","pending","timedOut","creating","confirmingPassword","reducer","action","confirming","AppProvider","useReducer","dispatch","ctx","setAuthenticated","setCreatingAccount","setConfirmingPassword","setVcode","setPendingVCode","setTimedOutVCode","setErrorVCode","err","AuthContext","Provider","modal","opened","subtitle","authCtx","useContext","openModal","closeModal","setCss","AppContext","Boolean","hostname","ReactDOM","AuthProvider","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.78cd9d98.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    /* background: rgba(11, 12, 14, 0.8); */\r\n    margin: 0;\r\n    padding: 25px;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-weight: 500;\r\n  }\r\n\r\n  code, textarea {\r\n    font-family: Consolas !important;\r\n  }\r\n\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .modal {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .modal-body {\r\n    /* max-height: 500px; */\r\n    background: red;\r\n  }\r\n\r\n\r\n  /* .modal; */\r\n\r\n  input::placeholder {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst StyledYamlEditorRoot = styled.div`\r\n  textarea {\r\n    color: #333;\r\n    font-size: 13px;\r\n  }\r\n  .input {\r\n    color: #333;\r\n    box-shadow: 1px 1px 10px rgba(25, 37, 45, 0.15);\r\n  }\r\n  .label {\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n  .notchedOutline {\r\n    border-color: #37506c;\r\n  }\r\n`\r\n\r\nfunction YamlEditor(props: {\r\n  value?: string\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => any\r\n}) {\r\n  return (\r\n    <StyledYamlEditorRoot>\r\n      <TextField\r\n        name=\"page\"\r\n        rows={15}\r\n        rowsMax={30}\r\n        label=\"Editor\"\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: 'label',\r\n          },\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        spellCheck={false}\r\n        InputProps={{\r\n          classes: {\r\n            root: 'input',\r\n            notchedOutline: 'notchedOutline',\r\n          },\r\n        }}\r\n        margin=\"normal\"\r\n        autoFocus\r\n        multiline\r\n        fullWidth\r\n        {...props}\r\n      />\r\n    </StyledYamlEditorRoot>\r\n  )\r\n}\r\n\r\nexport default YamlEditor\r\n","import React from 'react'\r\n\r\nexport type Cache = Record<string, StoredData>\r\n\r\nexport interface AutoSaveProps {\r\n  autoSave?: boolean\r\n  pageName?: string\r\n  storedKey: string\r\n  yml?: string\r\n  storedObj?: any\r\n  render?: (options: { cache: null | Cache; id: string }) => any\r\n  children?:\r\n    | React.ReactNode\r\n    | ((options: { cache: null | Cache; id: string }) => any)\r\n  interval?: number\r\n}\r\n\r\nexport function getKey(key: string) {\r\n  return `autosave-${key}`\r\n}\r\n\r\nexport function createStorageStamp(\r\n  pageName: string | undefined,\r\n  data: any,\r\n): string {\r\n  const date = String(new Date().toISOString())\r\n  const formattedData: StoredData = {\r\n    [date]: { pageName, data },\r\n  }\r\n  return JSON.stringify(formattedData)\r\n}\r\n\r\nexport interface StoredData {\r\n  [dateISOString: string]: {\r\n    pageName: string | undefined\r\n    data: any // remember this has to be a string when it gets to local storage\r\n  }\r\n}\r\n\r\nexport function cutBy(num: number = 10, obj: any) {\r\n  let keys: string[] = typeof obj === 'object' ? Object.keys(obj) : []\r\n  keys = keys.reverse()\r\n  if (keys.length > num) keys.length = num\r\n  return keys.reduce((acc, key: string) => {\r\n    // @ts-ignore\r\n    acc[key] = obj[key]\r\n    return acc\r\n  }, {})\r\n}\r\n\r\nfunction AutoSave({\r\n  autoSave = true,\r\n  storedKey = '',\r\n  storedObj,\r\n  render,\r\n  children,\r\n  interval = 15000,\r\n}: AutoSaveProps) {\r\n  const [cache, setCache] = React.useState<null | Cache>(null)\r\n  const autoSaveRef = React.useRef<any>()\r\n\r\n  const id = React.useMemo(() => getKey(storedKey), [storedKey])\r\n  console.log(storedObj)\r\n\r\n  function save() {\r\n    let storedData = window.localStorage.getItem(id)\r\n    if (storedData) {\r\n      try {\r\n        storedData = JSON.parse(storedData)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n    const date = String(new Date().toISOString())\r\n    const nextStoredItem = {\r\n      [date]: storedObj,\r\n    }\r\n    const nextStoredObj = cutBy(10, {\r\n      ...(typeof storedData === 'object' ? storedData : {}),\r\n      ...cache,\r\n      ...nextStoredItem,\r\n    })\r\n\r\n    window.localStorage.setItem(id, JSON.stringify(nextStoredObj))\r\n    setCache(nextStoredObj)\r\n  }\r\n\r\n  // Initiates the cache from storage\r\n  React.useEffect(() => {\r\n    let storedData\r\n    try {\r\n      storedData = window.localStorage.getItem(id)\r\n      if (storedData) storedData = JSON.parse(storedData) || {}\r\n      setCache(storedData)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }, [cache, id])\r\n\r\n  React.useEffect(() => {\r\n    autoSaveRef.current = setInterval(() => {\r\n      save()\r\n    }, interval)\r\n    return function cleanup() {\r\n      clearInterval(autoSaveRef.current)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  if (render) return render({ cache, id })\r\n  if (children) {\r\n    if (typeof children === 'function') return children({ cache, id })\r\n    return children\r\n  }\r\n  return null\r\n}\r\n\r\nexport default AutoSave\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Box, { BoxProps } from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport interface BoardProps extends BoxProps {\r\n  label?: React.ReactNode\r\n  sublabel?: React.ReactNode\r\n  children?: React.ReactNode\r\n  height?: string | number\r\n}\r\n\r\nconst StyledBox = styled(Box)`\r\n  border: 1px solid #37506c;\r\n  border-radius: 4px;\r\n  margin: 8px 0 10px;\r\n  padding: 12px;\r\n  color: #37506c;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0.35;\r\n  box-shadow: 1px 1px 10px rgba(25, 37, 45, 0.15);\r\n  user-select: none;\r\n  height: ${({ height }) => height};\r\n`\r\n\r\nfunction BoardHeader({\r\n  label,\r\n  sublabel,\r\n}: {\r\n  label?: React.ReactNode\r\n  sublabel?: React.ReactNode\r\n}) {\r\n  return sublabel ? (\r\n    <Typography align=\"center\">\r\n      <Typography style={{ display: 'block' }} variant=\"button\">\r\n        {label}\r\n      </Typography>\r\n      <Typography variant=\"caption\" style={{ display: 'block' }} align=\"center\">\r\n        {sublabel}\r\n      </Typography>\r\n    </Typography>\r\n  ) : (\r\n    <Typography variant=\"button\">{label}</Typography>\r\n  )\r\n}\r\n\r\nfunction Board({ label, sublabel, children, ...rest }: BoardProps) {\r\n  return (\r\n    <StyledBox margin=\"normal\" {...rest}>\r\n      <BoardHeader label={label} sublabel={sublabel} />\r\n      {children}\r\n    </StyledBox>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","// Used to render common action components like Button (good for supporting spacing)\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ActionsProps extends React.HTMLAttributes<HTMLElement> {\r\n  component?: React.ElementType<any>\r\n  children: React.ReactNode\r\n  margin?: string | number\r\n}\r\n\r\nconst StyledRoot = styled.div<ActionsProps>`\r\n  margin: ${({ margin }) =>\r\n    typeof margin !== 'undefined' ? margin : '10px auto'};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  button,\r\n  input,\r\n  select {\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nexport const StyledSpace = styled.div`\r\n  width: 6px;\r\n  height: auto;\r\n  display: inline-block;\r\n`\r\n\r\nfunction Actions({\r\n  component: Component = StyledRoot,\r\n  children: childrenProp,\r\n  margin,\r\n  ...rest\r\n}: ActionsProps) {\r\n  let children: React.ReactNode[] = React.Children.toArray(childrenProp)\r\n\r\n  children = children.map((child, childIndex: number) => {\r\n    if (!React.isValidElement(child)) {\r\n      return null\r\n    }\r\n    return (\r\n      <React.Fragment key={`actions_action${childIndex}`}>\r\n        {React.cloneElement(child, { ...child.props })}\r\n        {childIndex + 1 < children.length && <StyledSpace />}\r\n      </React.Fragment>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Component margin={margin} {...rest}>\r\n      {children}\r\n    </Component>\r\n  )\r\n}\r\n\r\nexport default Actions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { SelectProps as MuiSelectProps } from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nexport interface SelectOption {\r\n  key?: string\r\n  value: string\r\n  label: string\r\n}\r\n\r\nexport interface SelectProps extends MuiSelectProps {\r\n  options: SelectOption[]\r\n}\r\n\r\nconst StyledSelect = styled(TextField)`\r\n  option,\r\n  select {\r\n    color: #333;\r\n  }\r\n  .input {\r\n    color: #333;\r\n    box-shadow: 1px 1px 10px rgba(25, 37, 45, 0.15);\r\n  }\r\n  .outline {\r\n    color: #333;\r\n    border: 1px #37506c solid;\r\n  }\r\n  .label {\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n`\r\n\r\nfunction Select({\r\n  options,\r\n  InputProps,\r\n  InputLabelProps,\r\n  SelectProps,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <StyledSelect\r\n      margin=\"dense\"\r\n      InputProps={{\r\n        ...InputProps,\r\n        classes: {\r\n          root: 'input',\r\n          notchedOutline: 'outline',\r\n        },\r\n      }}\r\n      InputLabelProps={{\r\n        ...InputLabelProps,\r\n        classes: { root: 'label', ...InputLabelProps?.classes },\r\n        shrink: true,\r\n      }}\r\n      SelectProps={{\r\n        ...SelectProps,\r\n        classes: {\r\n          outlined: 'outlined',\r\n          ...SelectProps?.classes,\r\n        },\r\n      }}\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      select\r\n      fullWidth\r\n      {...rest}\r\n    >\r\n      {options.map(({ value, key = value, label }: any) => (\r\n        <MenuItem key={key} value={value}>\r\n          {label}\r\n        </MenuItem>\r\n      ))}\r\n    </StyledSelect>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\n\r\n/**\r\n * Runs a series of functions from left to right, passing in the argument of the\r\n *    invokee to each function\r\n * @param { function[] } fns - Arguments of functions\r\n */\r\n\r\nexport function callAll(...fns: any[]) {\r\n  return (...args: any[]) =>\r\n    fns.forEach((fn) => typeof fn === 'function' && fn(...args))\r\n}\r\n\r\n/**\r\n * Composes a series of functions from right to left, passing in the result of each function to\r\n *    the next function in the pipeline\r\n * @param { function[] } fns - Arguments of functions\r\n */\r\n\r\nexport function compose(...fns: Function[]) {\r\n  return (args?: any) => {\r\n    return fns.reduceRight(\r\n      (acc, fn) => (typeof fn === 'function' ? fn(acc) : acc),\r\n      args,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Prints data to the console (colors are supported)\r\n * @param { string } msg - Console message\r\n */\r\nexport function log(msg: any, style?: any, obj?: any) {\r\n  let args = [`%c${msg}`]\r\n  if (msg && typeof msg === 'object') {\r\n    const options = msg\r\n    args = [`%c${options.msg}`]\r\n    let str = 'font-weight:bold;'\r\n    if (options.color) str += `color:${options.color};`\r\n    args.push(str)\r\n    if (options.data) args.push(options.data)\r\n  } else {\r\n    if (style) {\r\n      if (typeof style === 'string') {\r\n        args.push(style)\r\n      } else {\r\n        let str = 'font-weight:bold;'\r\n        if (style.color) str += `color:${style.color};`\r\n        args.push(str)\r\n      }\r\n    }\r\n    if (obj) args.push(obj)\r\n  }\r\n  console.log.bind(window.console, ...args)\r\n}\r\n\r\n/**\r\n * Converts a decimal value to a whole number. Strings will be converted to a number type\r\n * @param { number | string } value - Number value to convert\r\n */\r\nexport function decimalToWhole(value: any) {\r\n  return Number(value) * 100\r\n}\r\n\r\n/**\r\n * Used to highlight elements that its attached to like red borders, etc\r\n * @param { object } options - Object of html style attributes\r\n */\r\nexport function getDebugStyles(options?: React.CSSProperties) {\r\n  return {}\r\n  // return { border: '1px solid red', ...options }\r\n}\r\n\r\n/**\r\n * Returns true if there is a decimal in the number.\r\n * @param { number } value - Value to evaluate\r\n */\r\nexport function hasDecimal(value: any): boolean {\r\n  return Number(value) % 1 !== 0\r\n}\r\n\r\n/**\r\n * Returns true if there is any letter in the string\r\n * @param { string } value - Value to evaluate\r\n */\r\nexport function hasLetter(value: any): boolean {\r\n  return /[a-zA-Z]/i.test(String(value))\r\n}\r\n\r\n/**\r\n * Returns true if we are in the browser environment\r\n */\r\nexport function isBrowser() {\r\n  return typeof window !== 'undefined'\r\n}\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentProps } from '@aitmed/react-uidl'\r\n\r\nfunction Button({\r\n  type,\r\n  style,\r\n  componentId,\r\n  children,\r\n  src,\r\n  uidl,\r\n  ...rest\r\n}: ComponentProps) {\r\n  const styles = {\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: uidl?.css.base?.fontSize,\r\n    borderStyle: uidl?.css.button?.borderStyle,\r\n    backgroundColor: uidl?.css?.base?.backgroundColor,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <button type=\"button\" style={styles} {...rest}>\r\n      {children}{' '}\r\n      {src && (\r\n        <img\r\n          src={src}\r\n          alt=\"'\"\r\n          style={{\r\n            width: '35%',\r\n            height: '35%',\r\n          }}\r\n        />\r\n      )}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n// import Button from './Button'\r\nimport { getDebugStyles, log } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface ImageProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  src?: string\r\n  uidl: any\r\n  children?: any\r\n}\r\n\r\nfunction Image({\r\n  children, // TODO: sometimes we're having buttons as a child\r\n  type,\r\n  style,\r\n  src,\r\n  componentId,\r\n  uidl,\r\n  ...rest\r\n}: ImageProps) {\r\n  // If an image has children, we will assume it is some icon button overlapping\r\n  //    Ex: profile photos and showing pencil icon on top to change it\r\n  if (children) {\r\n    log({\r\n      msg: 'Image has children',\r\n      color: '#c33a0b',\r\n      data: children,\r\n    })\r\n  }\r\n\r\n  const styles = {\r\n    ...uidl?.css?.image,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  let child\r\n\r\n  if (!children) {\r\n    return <img src={src} alt=\"\" style={styles} {...rest} />\r\n  } else if (children.props?.uidl?.component) {\r\n    child = uidl?.parseComponent(children.props.uidl.component)\r\n  }\r\n\r\n  return (\r\n    <div style={{ ...styles, position: 'relative' }}>\r\n      <img\r\n        src={src}\r\n        title={src}\r\n        alt=\"\"\r\n        style={{ border: '1px solid red', width: '100%', height: '100%' }}\r\n        {...rest}\r\n      />\r\n      {child}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\r\nimport { getDebugStyles, log } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface InputProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType | string\r\n  componentId: string\r\n  placeholder?: string\r\n  inputType?: string\r\n  uidl: any\r\n  children?: any\r\n  onChange?: any\r\n}\r\n\r\nfunction Input({\r\n  type = '',\r\n  style,\r\n  componentId,\r\n  inputType = 'text',\r\n  children,\r\n  uidl,\r\n  onChange: onChangeProp,\r\n  ...rest\r\n}: InputProps) {\r\n  const [value, setValue] = React.useState(\r\n    typeof children === 'string' ? children : '',\r\n  )\r\n\r\n  const props: any = {\r\n    type: inputType,\r\n    style: {\r\n      ...uidl?.css?.textField,\r\n      ...style,\r\n      ...getDebugStyles(),\r\n    },\r\n  }\r\n\r\n  if (children) {\r\n    log({\r\n      msg: `Input has children. ${\r\n        componentId ? 'Component ID: ' + componentId : ''\r\n      }`,\r\n      color: '#c92fb5',\r\n      data: children,\r\n    })\r\n  }\r\n\r\n  if (type.indexOf('.') !== -1) {\r\n    const narrowedType = type.split('.')?.[1]\r\n    if (narrowedType === 'date') props.type = 'date'\r\n  }\r\n\r\n  function onChange(e: React.ChangeEvent<any>) {\r\n    if (typeof onChangeProp === 'function') {\r\n      onChangeProp(e)\r\n    }\r\n    setValue(e.target?.value)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      id={componentId}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...rest}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface LabelProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  children?: React.ReactNode\r\n  uidl: any\r\n}\r\n\r\nfunction Label({\r\n  style,\r\n  type,\r\n  componentId,\r\n  children,\r\n  uidl,\r\n  ...rest\r\n}: LabelProps) {\r\n  const styles = {\r\n    fontSize: uidl.css?.base?.fontSize,\r\n    color: uidl.css?.base?.color,\r\n    ...uidl.css?.label,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    <div style={styles} {...rest}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface DivProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  children?: React.ReactNode\r\n  uidl: any\r\n}\r\n\r\nfunction Div({ style, children, componentId, uidl }: DivProps) {\r\n  const styles = {\r\n    color: uidl?.css?.base?.color,\r\n    fontSize: uidl?.css?.base?.fontSize,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    <div id={componentId} style={styles}>\r\n      {Array.isArray(children) &&\r\n        // @ts-ignore\r\n        children.map((child, index: number) => (\r\n          <React.Fragment key={`uidlc-${index}`}>{child}</React.Fragment>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Div\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface SelectProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  selectOptions?: any[]\r\n  uidl: any\r\n}\r\n\r\nfunction Select({\r\n  type,\r\n  style,\r\n  componentId,\r\n  uidl,\r\n  selectOptions = [],\r\n  ...rest\r\n}: SelectProps) {\r\n  const [value, setValue] = React.useState('')\r\n\r\n  const styles = {\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  function onChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    setValue(e.target?.value)\r\n  }\r\n\r\n  return (\r\n    <select style={styles} value={value} onChange={onChange} {...rest}>\r\n      {selectOptions.map((option: any) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import Prynote from '@aitmed/prynote-sdk'\r\n\r\nexport const prynote = new Prynote({\r\n  apiVersion: 'v1beta1',\r\n  env: 'development',\r\n})\r\n","// Utility react hook for debugging UIDL - Provides controls for working\r\n//    with text fields. Ex: WYSIWYG UIDL editor\r\nimport React from 'react'\r\nimport {\r\n  normalizeBorderAttrs,\r\n  normalizeColorAttrs,\r\n  normalizeFontAttrs,\r\n  normalizePositionAttrs,\r\n  normalizeStyleAttrs,\r\n  prepareAssetUrl,\r\n  resolveAliases,\r\n  resolveAligns,\r\n  resolveChildren,\r\n  resolveClassNames,\r\n  resolvePositionAttrs,\r\n  resolveSizeAttrs,\r\n  resolveStyles,\r\n  resolveTagName,\r\n} from '@aitmed/react-uidl'\r\nimport yaml from 'yaml'\r\nimport { useImmer } from 'use-immer'\r\n\r\nconst initialState = {\r\n  yml: '',\r\n  parsedYml: {},\r\n  cache: {},\r\n}\r\n\r\nfunction useYamlEditor({\r\n  initialValue = '',\r\n  delay: delayProp = 50,\r\n  pageName,\r\n}: {\r\n  initialValue?: string\r\n  delay?: number\r\n  pageName?: string\r\n}) {\r\n  const [state, setState] = useImmer(initialState)\r\n  const [delay, setDelay] = React.useState(delayProp)\r\n\r\n  function parseYml(yml: string) {\r\n    try {\r\n      return yaml.parse(yml)\r\n    } catch (error) {\r\n      console.error(error)\r\n      return yml\r\n    }\r\n  }\r\n\r\n  /** Parses a string of YML\r\n   * @param { string } yml - Yaml string\r\n   */\r\n  function setYml(e: React.ChangeEvent<HTMLInputElement> | string) {\r\n    // Caller is directly using a YAML string\r\n    if (typeof e === 'string') {\r\n      if (e !== state.yml) {\r\n        setState((draft) => {\r\n          draft.yml = e\r\n          draft.parsedYml = parseYml(e)\r\n        })\r\n      }\r\n    } else {\r\n      e.persist()\r\n      if (e.target.value !== state.yml) {\r\n        setState((draft) => {\r\n          draft.yml = e.target.value\r\n          draft.parsedYml = parseYml(e.target.value)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (initialValue) {\r\n      setState((draft) => {\r\n        const parsedYml = yaml.parse(initialValue)\r\n        draft.yml = initialValue\r\n        draft.parsedYml = parsedYml\r\n      })\r\n    }\r\n  }, [initialValue, setState])\r\n\r\n  return {\r\n    ...state,\r\n    delay,\r\n    setDelay,\r\n    setYml,\r\n  }\r\n}\r\n\r\nexport default useYamlEditor\r\n","// Utility react hook for debugging UIDL - Renders a select field to\r\n//    select different pages\r\nimport React from 'react'\r\n\r\nexport function toSelectPageOptions(pages: string[]) {\r\n  return pages.map((page: string) => ({\r\n    key: page,\r\n    value: page,\r\n    label: page,\r\n  }))\r\n}\r\n\r\nfunction useSelectPage({\r\n  name = '',\r\n  pages = [],\r\n  navigate = () => {},\r\n  onChange,\r\n}: {\r\n  name?: string\r\n  pages?: string[]\r\n  onChange?: (page: string) => void\r\n  navigate: (to: string) => void\r\n}) {\r\n  const [selectedPage, setSelectedPage] = React.useState(name)\r\n\r\n  const selectPage = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement> | string) => {\r\n      if (typeof e === 'string') {\r\n        navigate('/' + e)\r\n      } else {\r\n        navigate('/' + e.target.value)\r\n      }\r\n    },\r\n    [navigate],\r\n  )\r\n\r\n  React.useEffect(() => {\r\n    if (selectedPage !== name) {\r\n      setSelectedPage(name)\r\n      if (onChange) onChange(name)\r\n    }\r\n  }, [selectedPage, name, onChange])\r\n\r\n  return {\r\n    selectedPage,\r\n    selectPage,\r\n    selectPageOptions: toSelectPageOptions(pages),\r\n  }\r\n}\r\n\r\nexport default useSelectPage\r\n","// Utility react hook for debugging UIDL - Renders a select field to\r\n//    select different device sizes\r\nimport React from 'react'\r\n\r\nexport type DeviceKey =\r\n  | 'galaxyS5'\r\n  | 'iPhone5'\r\n  | 'iPhone6_7_8'\r\n  | 'iPhone6_7_8_Plus'\r\n  | 'iPad'\r\n\r\nexport interface Device {\r\n  label: string\r\n  sizes: {\r\n    width: number\r\n    height: number\r\n  }\r\n}\r\n\r\nexport const devices: Record<DeviceKey, Device> = {\r\n  galaxyS5: {\r\n    label: 'Galaxy S5',\r\n    sizes: { width: 360, height: 640 },\r\n  },\r\n  iPhone5: {\r\n    label: 'iPhone 5',\r\n    sizes: { width: 320, height: 568 },\r\n  },\r\n  iPhone6_7_8: {\r\n    label: 'iPhone 6, 7, 8',\r\n    sizes: { width: 375, height: 667 },\r\n  },\r\n  iPhone6_7_8_Plus: {\r\n    label: 'iPhone 6, 7, 8 Plus',\r\n    sizes: { width: 414, height: 736 },\r\n  },\r\n  iPad: {\r\n    label: 'iPad',\r\n    sizes: { width: 768, height: 1024 },\r\n  },\r\n}\r\n\r\nexport const selectDeviceOptions = Object.keys(devices).map((deviceKey) => {\r\n  return {\r\n    key: deviceKey,\r\n    value: deviceKey,\r\n    label: devices[deviceKey as DeviceKey].label,\r\n  }\r\n})\r\n\r\nfunction useSelectDevice({\r\n  initialValue = 'galaxyS5',\r\n}: {\r\n  initialValue: DeviceKey | ''\r\n}) {\r\n  const [selectedDevice, setSelectedDevice] = React.useState(initialValue)\r\n\r\n  function selectDevice(e: React.ChangeEvent<any> | DeviceKey) {\r\n    if (typeof e === 'string') {\r\n      setSelectedDevice(e)\r\n    } else {\r\n      e.persist()\r\n      setSelectedDevice(e.target.value)\r\n    }\r\n  }\r\n\r\n  return {\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n  }\r\n}\r\n\r\nexport default useSelectDevice\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useImmer } from 'use-immer'\r\nimport { prynote } from 'app/client'\r\nimport useYamlEditor from 'hooks/useYamlEditor'\r\nimport useSelectPage from 'hooks/useSelectPage'\r\nimport useSelectDevice from 'hooks/useSelectDevice'\r\nimport { log } from '../utils/common'\r\n\r\nconst storedConfigKey = 'uidl-uw'\r\n\r\nexport interface UseUIDLState {\r\n  config: null | {\r\n    baseUrl: string\r\n    languageSuffix: { [key: string]: string }\r\n    fileSuffix: string\r\n    startPage: string\r\n    page: string[]\r\n  }\r\n  baseCss: null | {\r\n    pageName?: any\r\n    defaultValue?: any\r\n    globalVar?: any\r\n    classNames?: any\r\n  }\r\n  basePage: null | any\r\n  pages: string[]\r\n  initialPageYml: string\r\n}\r\n\r\nconst initialState: UseUIDLState = {\r\n  config: null,\r\n  baseCss: null,\r\n  basePage: null,\r\n  pages: [],\r\n  initialPageYml: '',\r\n}\r\n\r\nfunction useUIDL({\r\n  baseUrl,\r\n  location,\r\n  params = {},\r\n  navigate,\r\n  uidlEndpoint,\r\n}: {\r\n  baseUrl?: string\r\n  location: any\r\n  params: { page?: string } | undefined\r\n  navigate: (path: string) => any\r\n  uidlEndpoint: string\r\n}) {\r\n  const [state, setState] = useImmer(initialState)\r\n\r\n  const {\r\n    selectedDevice,\r\n    selectDevice,\r\n    selectDeviceOptions,\r\n  } = useSelectDevice({ initialValue: 'galaxyS5' })\r\n\r\n  const { selectedPage, selectPage } = useSelectPage({\r\n    name: params?.page || '1_SignIn',\r\n    pages: state.pages,\r\n    navigate,\r\n  })\r\n\r\n  const { yml, parsedYml, setYml } = useYamlEditor({\r\n    initialValue: '',\r\n    pageName: params?.page || '1_SignIn',\r\n  })\r\n\r\n  function onSelectDevice(e: any) {\r\n    selectDevice(e)\r\n  }\r\n\r\n  function onSelectPage(e: any) {\r\n    selectPage(e)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    async function init() {\r\n      let config: any\r\n      if (typeof window !== 'undefined') {\r\n        config = window.localStorage.getItem(storedConfigKey)\r\n        if (config) {\r\n          config = JSON.parse(config)\r\n        } else {\r\n          config = await prynote.uidl.getUIDL(uidlEndpoint)\r\n          window.localStorage.setItem(storedConfigKey, JSON.stringify(config))\r\n        }\r\n        const { baseUrl = '', page: pages = [] } = config\r\n        const baseCss = await prynote.uidl.getUIDL(`${baseUrl}BaseCSS.yml`)\r\n        const basePage = await prynote.uidl.getUIDL(`${baseUrl}BasePage_en.yml`)\r\n        if (location?.pathname === '/') {\r\n          navigate(config.startPage || '1_SignIn')\r\n        }\r\n\r\n        setState((draft) => {\r\n          draft.config = config\r\n          draft.baseCss = baseCss\r\n          draft.basePage = basePage\r\n          draft.pages = pages\r\n        })\r\n      }\r\n    }\r\n    init()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    async function getUIDL() {\r\n      try {\r\n        const url = `${state.config?.baseUrl || baseUrl}${selectedPage}_en.yml`\r\n        const { data: pageYml } = await axios.get(url)\r\n        setYml(pageYml)\r\n      } catch (error) {\r\n        console.error(error)\r\n        window.alert(error.message)\r\n      }\r\n    }\r\n    log({ msg: `Fetching uidl page \"${selectedPage}\"`, color: '#a80a7a' })\r\n    getUIDL()\r\n    // eslint-disable-next-line\r\n  }, [selectedPage])\r\n\r\n  return {\r\n    ...state,\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n    selectPage,\r\n    selectedPage,\r\n    yml,\r\n    parsedYml,\r\n    setYml,\r\n    onSelectDevice,\r\n    onSelectPage,\r\n  }\r\n}\r\n\r\nexport default useUIDL\r\n","import React from 'react'\r\nimport { RouteChildrenProps } from 'react-router-dom'\r\nimport ReactUIDL from '@aitmed/react-uidl'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport useTheme from '@material-ui/core/styles/useTheme'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport YamlEditor from 'components/YamlEditor'\r\nimport AutoSave from 'components/AutoSave'\r\nimport Board from 'components/Board'\r\nimport Actions from 'components/common/Actions'\r\nimport Select from 'components/common/Select'\r\nimport Button from 'components/uidl/Button'\r\nimport Image from 'components/uidl/Image'\r\nimport Input from 'components/uidl/Input'\r\nimport Label from 'components/uidl/Label'\r\nimport Div from 'components/uidl/Div'\r\nimport UIDLSelect from 'components/uidl/Select'\r\nimport useUIDL from 'hooks/useUIDL'\r\nimport { devices, DeviceKey } from 'hooks/useSelectDevice'\r\nimport { toSelectPageOptions } from 'hooks/useSelectPage'\r\nimport { log } from './utils/common'\r\nimport Controls from './Controls'\r\n\r\nconst baseUrl = 'https://public.aitmed.com/alpha/'\r\nconst uidlEndpoint = `${baseUrl}uidlEndpoint.yml`\r\n\r\nfunction UIDLDiv({ style, ...props }: any) {\r\n  const styles = {\r\n    ...style,\r\n    ...(props.componentId === 'bodyContainer'\r\n      ? { background: '#fff' }\r\n      : undefined),\r\n    ...(props.componentId === 'header' ? { background: '#fff' } : undefined),\r\n  }\r\n  return <Div style={styles} {...props} />\r\n}\r\n\r\nfunction App({\r\n  history,\r\n  location,\r\n  match,\r\n}: RouteChildrenProps<{ page?: string }>) {\r\n  const [vw, setVw] = React.useState(devices['galaxyS5'].sizes.width)\r\n  const [vh, setVh] = React.useState(devices['galaxyS5'].sizes.height)\r\n  const theme = useTheme()\r\n  const isWidescreen = useMediaQuery(theme.breakpoints.only('xl'))\r\n  const {\r\n    config,\r\n    baseCss,\r\n    basePage,\r\n    pages,\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n    selectedPage,\r\n    initialPageYml,\r\n    yml,\r\n    parsedYml,\r\n    setYml,\r\n    onSelectDevice,\r\n    onSelectPage,\r\n  } = useUIDL({\r\n    baseUrl,\r\n    uidlEndpoint,\r\n    location,\r\n    params: match?.params,\r\n    navigate: history.push,\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    const device = devices[selectedDevice as DeviceKey]\r\n    setVw(device.sizes.width)\r\n    setVh(device.sizes.height)\r\n  }, [selectedDevice])\r\n\r\n  if (config && baseCss && basePage && parsedYml) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      log({ msg: 'config', color: 'olive', data: config })\r\n      log({ msg: 'baseCss', color: 'olive', data: baseCss })\r\n      log({ msg: 'basePage', color: 'olive', data: basePage })\r\n      log({ msg: 'page', color: 'olive', data: parsedYml })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        minHeight: '100vh',\r\n        overflowX: 'hidden',\r\n      }}\r\n      justify=\"center\"\r\n      direction={selectedDevice === 'iPad' && !isWidescreen ? 'column' : 'row'}\r\n      container\r\n    >\r\n      <Grid xs={12} sm={6} md={6} lg={4} xl={5} item>\r\n        <Board\r\n          component={Grid}\r\n          label=\"Component Board\"\r\n          sublabel=\"Draggable components\"\r\n          height=\"60%\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        style={{\r\n          paddingLeft: 12,\r\n          paddingRight: 12,\r\n          overflow: 'hidden',\r\n        }}\r\n        xs={12}\r\n        sm={6}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n        item\r\n      >\r\n        <Actions>\r\n          <Select\r\n            name=\"device\"\r\n            label=\"Select Device\"\r\n            value={selectedDevice}\r\n            onChange={selectDevice}\r\n            options={selectDeviceOptions}\r\n          />\r\n        </Actions>\r\n        <Select\r\n          name=\"page\"\r\n          label=\"Select Page\"\r\n          value={selectedPage}\r\n          onChange={onSelectPage}\r\n          options={toSelectPageOptions(pages)}\r\n        />\r\n        <Board label=\"Functions\" sublabel=\"Detected Functions\" />\r\n        <Board label=\"Assets\" sublabel=\"Detected Assets\" />\r\n      </Grid>\r\n      <Grid\r\n        style={{ overflow: 'hidden' }}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={5}\r\n        item\r\n      >\r\n        <Typography\r\n          component=\"div\"\r\n          align=\"center\"\r\n          variant=\"caption\"\r\n          color=\"secondary\"\r\n        >\r\n          {vw}px / {vh}px\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            margin: 'auto',\r\n            position: 'relative',\r\n            width: vw,\r\n            height: vh,\r\n            border: '2px solid magenta',\r\n          }}\r\n        >\r\n          <ReactUIDL\r\n            baseCss={baseCss}\r\n            basePage={basePage}\r\n            page={parsedYml}\r\n            config={config}\r\n            components={{\r\n              Button,\r\n              Image,\r\n              Input,\r\n              Label,\r\n              Div: UIDLDiv,\r\n              Select: UIDLSelect,\r\n            }}\r\n            viewportWidth={vw}\r\n            viewportHeight={vh}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      <Grid\r\n        style={{\r\n          paddingLeft: 12,\r\n          paddingRight: 12,\r\n        }}\r\n        xs={12}\r\n        sm={6}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n        item\r\n      >\r\n        <YamlEditor value={yml} onChange={setYml} />\r\n        <Board\r\n          label=\"History\"\r\n          sublabel=\"(Saves every 15 seconds. Maximum 8 items in stack)\"\r\n        >\r\n          <AutoSave\r\n            // @ts-ignore\r\n            storedKey={parsedYml ? parsedYml.pageName || '' : ''}\r\n            storedObj={{ data: yml }}\r\n            render={({ cache, id }) => {\r\n              console.log('autosave cache: ', cache)\r\n              console.log('autosave id: ', id)\r\n              return null\r\n            }}\r\n          />\r\n        </Board>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport { AppContextValue } from './AppProvider'\r\n\r\nconst context = React.createContext<undefined | AppContextValue>(undefined)\r\n\r\nexport default context\r\n","import React from 'react'\r\nimport AuthContext from './AuthContext'\r\n\r\nexport interface AuthContextValue extends AuthContextState {\r\n  setAuthenticated?: (authenticated: boolean) => void\r\n  setCreatingAccount?: (creating: boolean) => void\r\n  setConfirmingPassword?: (confirming: boolean) => void\r\n  setPendingVCode?: (pending: boolean) => void\r\n  setVcode?: (code: string) => void\r\n  setTimedOutVCode?: (timedOut: boolean) => void\r\n  setErrorVCode?: (error: null | Error) => void\r\n}\r\n\r\nexport type AppContextAction =\r\n  | { type: 'set-authenticated'; authenticated: boolean }\r\n  | { type: 'set-vcode'; code: string }\r\n  | { type: 'set-vcode-in-process'; pending: boolean }\r\n  | { type: 'set-vcode-timed-out'; timedOut: boolean }\r\n  | { type: 'set-vcode-error'; error: null | Error }\r\n  | { type: 'set-creating-in-process'; creating: boolean }\r\n  | { type: 'set-creating-confirming-password'; confirming: boolean }\r\n\r\nexport interface AuthContextState {\r\n  authenticated: boolean\r\n  status: null | any\r\n  verification: {\r\n    code: null | string\r\n    pending: boolean\r\n    timedOut: boolean\r\n    error: null | Error\r\n  }\r\n  creating: {\r\n    pending: boolean\r\n    confirmingPassword: boolean\r\n  }\r\n}\r\n\r\nexport const initialState: AuthContextState = {\r\n  authenticated: false,\r\n  status: null,\r\n  verification: {\r\n    code: null,\r\n    pending: false,\r\n    timedOut: false,\r\n    error: null,\r\n  },\r\n  creating: {\r\n    pending: false,\r\n    confirmingPassword: false,\r\n  },\r\n}\r\n\r\nfunction reducer(\r\n  state: AuthContextState = initialState,\r\n  action: AppContextAction,\r\n): AuthContextState {\r\n  switch (action.type) {\r\n    case 'set-authenticated':\r\n      return { ...state, authenticated: action.authenticated }\r\n    case 'set-vcode':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, code: action.code },\r\n      }\r\n    case 'set-vcode-in-process':\r\n      return {\r\n        ...state,\r\n        verification: {\r\n          ...state.verification,\r\n          pending: action.pending,\r\n          timedOut: false,\r\n        },\r\n      }\r\n    case 'set-vcode-timed-out':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, timedOut: action.timedOut },\r\n      }\r\n    case 'set-vcode-error':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, error: action.error },\r\n      }\r\n    case 'set-creating-in-process':\r\n      return {\r\n        ...state,\r\n        creating: { ...state.creating, pending: action.creating },\r\n      }\r\n    case 'set-creating-confirming-password':\r\n      return {\r\n        ...state,\r\n        creating: { ...state.creating, confirmingPassword: action.confirming },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction AppProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n\r\n  function setAuthenticated(authenticated: boolean) {\r\n    dispatch({ type: 'set-authenticated', authenticated })\r\n  }\r\n\r\n  function setVcode(code: string) {\r\n    dispatch({ type: 'set-vcode', code })\r\n  }\r\n\r\n  function setPendingVCode(pending: boolean) {\r\n    dispatch({ type: 'set-vcode-in-process', pending })\r\n  }\r\n\r\n  function setTimedOutVCode(timedOut: boolean) {\r\n    dispatch({ type: 'set-vcode-timed-out', timedOut })\r\n  }\r\n\r\n  function setErrorVCode(err: null | Error) {\r\n    dispatch({ type: 'set-vcode-error', error: err })\r\n  }\r\n\r\n  function setCreatingAccount(creating: boolean) {\r\n    dispatch({ type: 'set-creating-in-process', creating })\r\n  }\r\n\r\n  function setConfirmingPassword(confirming: boolean) {\r\n    dispatch({ type: 'set-creating-confirming-password', confirming })\r\n  }\r\n\r\n  // Keep the authenticated state in sync with status\r\n  React.useEffect(() => {\r\n    if (!state.authenticated && state.status?.code === 0) {\r\n      // setAuthenticated(true)\r\n    }\r\n  }, [state.authenticated, state.status])\r\n\r\n  const ctx: AuthContextValue = {\r\n    ...state,\r\n    setAuthenticated,\r\n    setCreatingAccount,\r\n    setConfirmingPassword,\r\n    setVcode,\r\n    setPendingVCode,\r\n    setTimedOutVCode,\r\n    setErrorVCode,\r\n  }\r\n\r\n  return <AuthContext.Provider value={ctx}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AppProvider\r\n","import React from 'react'\r\nimport { initialState, AuthContextValue } from './AuthProvider'\r\n\r\nconst context = React.createContext<AuthContextValue>(initialState)\r\n\r\nexport default context\r\n","import React from 'react'\r\nimport { BaseCSS } from '@aitmed/react-uidl'\r\nimport { log } from 'utils'\r\nimport AppContext from './AppContext'\r\nimport AuthContext from './AuthContext'\r\n\r\nexport interface AppContextModalState {\r\n  name: string\r\n  opened: boolean\r\n  title: string\r\n  subtitle: string\r\n}\r\n\r\nexport interface AppContextValue extends AppContextState {\r\n  openModal?: (options?: Partial<AppContextModalState>) => void\r\n  closeModal?: (options?: Partial<AppContextModalState>) => void\r\n  setCss?: (css?: null | BaseCSS) => void\r\n}\r\n\r\nexport type AppContextAction =\r\n  | { type: 'open-modal'; modal?: any }\r\n  | { type: 'close-modal'; modal?: any }\r\n  | { type: 'set-css'; css: null | BaseCSS }\r\n\r\nexport interface AppContextState {\r\n  modal: AppContextModalState\r\n  css: null | BaseCSS\r\n}\r\n\r\nexport const initialState: AppContextState = {\r\n  modal: {\r\n    name: '',\r\n    opened: false,\r\n    title: '',\r\n    subtitle: '',\r\n  },\r\n  css: null,\r\n}\r\n\r\nfunction reducer(\r\n  state: AppContextState = initialState,\r\n  action: AppContextAction,\r\n): AppContextState {\r\n  switch (action.type) {\r\n    case 'open-modal':\r\n      return {\r\n        ...state,\r\n        modal: { ...state.modal, ...action.modal, opened: true },\r\n      }\r\n    case 'close-modal':\r\n      return {\r\n        ...state,\r\n        modal: { ...state.modal, ...action.modal, opened: false },\r\n      }\r\n    case 'set-css':\r\n      return { ...state, css: action.css }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction AppProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n  const authCtx = React.useContext(AuthContext)\r\n\r\n  function openModal(options?: Partial<AppContextModalState>) {\r\n    dispatch({ type: 'open-modal', modal: options })\r\n  }\r\n\r\n  function closeModal(options?: Partial<AppContextModalState>) {\r\n    dispatch({ type: 'close-modal', modal: options })\r\n  }\r\n\r\n  function setCss(css: null | BaseCSS = null) {\r\n    dispatch({ type: 'set-css', css: css })\r\n  }\r\n\r\n  // Keep the authenticated state in sync with status\r\n  React.useEffect(() => {\r\n    if (authCtx && !authCtx.authenticated && authCtx.status?.code === 0) {\r\n      // setAuthenticated(true)\r\n    }\r\n  }, [authCtx])\r\n\r\n  React.useEffect(() => {\r\n    log({\r\n      msg: 'AppProviderState:',\r\n      data: state,\r\n      color: 'olive',\r\n    })\r\n  }, [state])\r\n\r\n  const ctx = {\r\n    ...state,\r\n    openModal,\r\n    closeModal,\r\n    setCss,\r\n  }\r\n\r\n  return <AppContext.Provider value={ctx}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport default AppProvider\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport GlobalStyle from './app/GlobalStyle'\r\nimport App from './App'\r\nimport AppProvider from './AppProvider'\r\nimport AuthProvider from './AuthProvider'\r\nimport * as serviceWorker from 'serviceWorker'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <AuthProvider>\r\n      <AppProvider>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={App} exact />\r\n            <Route path=\"/:page\" component={App} />\r\n          </Switch>\r\n        </Router>\r\n      </AppProvider>\r\n    </AuthProvider>\r\n  </>,\r\n  document.getElementById('root'),\r\n)\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}
{"version":3,"sources":["app/GlobalStyle.tsx","utils/common.ts","hooks/useYamlEditor.tsx","data/1_SignIn.ts","components/YamlEditor/blockRenderMap.ts","components/YamlEditor/blockRendererFn.tsx","components/YamlEditor/utils.ts","components/YamlEditor/YamlEditor.tsx","components/Panel/Panel.tsx","components/uidl/Button.tsx","components/uidl/Image.tsx","components/uidl/Input.tsx","components/uidl/Label.tsx","components/uidl/Div.tsx","components/uidl/Select.tsx","app/client.ts","hooks/useSelectPage.tsx","hooks/useSelectDevice.tsx","hooks/useUIDL.tsx","components/common/Select.tsx","components/Controls/Controls.tsx","hooks/usePageStatistics.tsx","components/common/Tooltip.tsx","components/Statistics/Statistics.tsx","components/Documentation/Item.tsx","components/Documentation/Documentation.tsx","App.tsx","AppContext.tsx","AuthProvider.tsx","AuthContext.tsx","AppProvider.tsx","serviceWorker.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","log","msg","style","obj","args","options","str","color","push","data","console","bind","window","useYamlEditor","onYmlChange","delay","delayProp","getIndentation","insertNewLine","removeIndent","React","useState","setDelay","exampleInitialized","setExampledInitialized","EditorState","createEmpty","editorState","setEditorState","onChange","nextEditorState","contentState","getCurrentContent","getPlainText","keyBindingFn","e","getDefaultKeyBinding","handleKeyCommand","command","newState","RichUtils","onReturn","onPastedText","text","ContentState","createFromText","createWithContent","error","onTab","preventDefault","newContentState","selectionState","getSelection","startKey","getStartKey","currentBlock","getBlockForKey","indentation","getText","isCollapsed","Modifier","insertText","replaceText","initializeExample","blockRenderMap","ImmutableMap","element","blockquote","atomic","unstyled","CodeBlock","block","props","fontSize","blockRendererFn","component","editable","LineAnchor","ImmutableRecord","line","Number","offset","getLineAnchorForOffset","seperator","getNewLine","lineIndex","nextLineIndex","lastLineIndex","indexOf","length","detectIndent","indent","getLines","ImmutableList","split","detectNewline","startOffset","getStartOffset","blockText","newLine","lines","currentLineIndex","getLine","currentLine","get","lineToInsert","newEditorState","forceSelection","getSelectionAfter","lineAnchor","beforeSelection","slice","getOffset","endsWith","beforeIndentOffset","rangeToRemove","merge","focusKey","focusOffset","anchorKey","anchorOffset","isBackward","removeRange","prototype","this","StyledRoot","styled","div","StyledEditor","pre","memo","Typography","gutterBottom","Button","size","type","variant","onClick","disabled","handleReturn","undefined","handlePastedText","Grid","StyledLabel","PanelHeader","label","sublabel","textColor","className","paragraph","Panel","children","rest","componentId","src","uidl","styles","outline","cursor","css","base","borderStyle","button","backgroundColor","alt","width","height","Image","child","image","parseComponent","position","title","border","Input","inputType","onChangeProp","value","setValue","textField","narrowedType","id","target","Label","Div","Array","isArray","map","index","Fragment","key","Select","selectOptions","option","prynote","Prynote","apiVersion","env","toSelectPageOptions","pages","page","useSelectPage","name","navigate","selectedPage","setSelectedPage","selectPage","selectPageOptions","devices","galaxyS5","sizes","iPhone5","iPhone6_7_8","iPhone6_7_8_Plus","iPad","selectDeviceOptions","Object","keys","deviceKey","useSelectDevice","initialValue","selectedDevice","setSelectedDevice","selectDevice","persist","initialState","config","baseCss","basePage","initialPageYml","useUIDL","baseUrl","location","params","uidlEndpoint","useImmer","state","setState","yml","setYml","parsedYml","setParsedYml","parsingErrored","setParsingErrored","useEffect","a","localStorage","getItem","JSON","parse","getUIDL","setItem","stringify","draft","init","parsed","yaml","onSelectDevice","onSelectPage","StyledSelect","TextField","colorScheme","InputProps","InputLabelProps","SelectProps","margin","classes","root","notchedOutline","shrink","select","outlined","icon","MenuItem","device","selected","nextProps","ids","paths","resources","components","componentTypes","functions","classNames","texts","dataModels","dataIds","placeholders","usePageStatistics","resetDraft","idKey","traverseComponents","callback","forEach","omit","dataModel","contentType","dataId","onHover","placeholder","path","resource","cn","includes","Tooltip","opened","setOpened","open","onOpen","onClose","placement","arrow","StyledBadge","MuiBadge","StyledCaption","stats","isEmpty","Grow","in","statisticBadges","badgeContent","tooltipTemplate","tooltipPlacement","replace","String","enterTouchDelay","max","showZero","StyledAvatar","Avatar","StyledListItemText","ListItemText","DocumentationItem","description","dense","ListItem","ListItemAvatar","primary","secondary","componentKeys","mouseIcon","functionKeys","assetKeys","aliasIcon","aliases","stylesAliases","Variations","DocumentationSection","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","UIDLDiv","background","StyledDocumentation","StyledAppBar","AppBar","StyledToolbar","Toolbar","App","history","match","vw","setVw","vh","setVh","theme","useTheme","isWidescreen","useMediaQuery","breakpoints","only","spacing","justify","container","paddingLeft","paddingRight","overflow","xs","sm","md","lg","xl","item","minHeight","overflowX","direction","align","UIDLSelect","viewportWidth","viewportHeight","context","createContext","authenticated","status","verification","code","pending","timedOut","creating","confirmingPassword","reducer","action","confirming","AppProvider","useReducer","dispatch","ctx","setAuthenticated","setCreatingAccount","setConfirmingPassword","setVcode","setPendingVCode","setTimedOutVCode","setErrorVCode","err","AuthContext","Provider","modal","subtitle","authCtx","useContext","openModal","closeModal","setCss","AppContext","Boolean","hostname","ReactDOM","render","AuthProvider","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.960dc9fa.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #fafafa;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-weight: 500;\r\n  }\r\n\r\n  code, textarea {\r\n    font-family: Consolas !important;\r\n  }\r\n\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .modal {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .modal-body {\r\n    /* max-height: 500px; */\r\n    background: red;\r\n  }\r\n\r\n\r\n  /* .modal; */\r\n\r\n  input::placeholder {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react'\r\n\r\n/**\r\n * Runs a series of functions from left to right, passing in the argument of the\r\n *    invokee to each function\r\n * @param { function[] } fns - Arguments of functions\r\n */\r\n\r\nexport function callAll(...fns: any[]) {\r\n  return (...args: any[]) =>\r\n    fns.forEach((fn) => typeof fn === 'function' && fn(...args))\r\n}\r\n\r\n/**\r\n * Composes a series of functions from right to left, passing in the result of each function to\r\n *    the next function in the pipeline\r\n * @param { function[] } fns - Arguments of functions\r\n */\r\n\r\nexport function compose(...fns: Function[]) {\r\n  return (args?: any) => {\r\n    return fns.reduceRight(\r\n      (acc, fn) => (typeof fn === 'function' ? fn(acc) : acc),\r\n      args,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Prints data to the console (colors are supported)\r\n * @param { string } msg - Console message\r\n */\r\nexport function log(msg: any, style?: any, obj?: any) {\r\n  let args = [`%c${msg}`]\r\n  if (msg && typeof msg === 'object') {\r\n    const options = msg\r\n    args = [`%c${options.msg}`]\r\n    let str = 'font-weight:bold;'\r\n    if (options.color) str += `color:${options.color};`\r\n    args.push(str)\r\n    if (options.data) args.push(options.data)\r\n  } else {\r\n    if (style) {\r\n      if (typeof style === 'string') {\r\n        args.push(style)\r\n      } else {\r\n        let str = 'font-weight:bold;'\r\n        if (style.color) str += `color:${style.color};`\r\n        args.push(str)\r\n      }\r\n    }\r\n    if (obj) args.push(obj)\r\n  }\r\n  console.log.bind(window.console, ...args)\r\n}\r\n\r\n/**\r\n * Converts a decimal value to a whole number. Strings will be converted to a number type\r\n * @param { number | string } value - Number value to convert\r\n */\r\nexport function decimalToWhole(value: any) {\r\n  return Number(value) * 100\r\n}\r\n\r\n/**\r\n * Used to highlight elements that its attached to like red borders, etc\r\n * @param { object } options - Object of html style attributes\r\n */\r\nexport function getDebugStyles(options?: React.CSSProperties) {\r\n  return {}\r\n  // return { border: '1px solid red', ...options }\r\n}\r\n\r\n/**\r\n * Returns true if there is a decimal in the number.\r\n * @param { number } value - Value to evaluate\r\n */\r\nexport function hasDecimal(value: any): boolean {\r\n  return Number(value) % 1 !== 0\r\n}\r\n\r\n/**\r\n * Returns true if there is any letter in the string\r\n * @param { string } value - Value to evaluate\r\n */\r\nexport function hasLetter(value: any): boolean {\r\n  return /[a-zA-Z]/i.test(String(value))\r\n}\r\n\r\n/**\r\n * Returns true if we are in the browser environment\r\n */\r\nexport function isBrowser() {\r\n  return typeof window !== 'undefined'\r\n}\r\n","// Utility react hook for debugging UIDL - Provides controls for working\r\n//    with text fields. Ex: WYSIWYG UIDL editor\r\nimport React from 'react'\r\nimport {\r\n  EditorState,\r\n  ContentState,\r\n  CharacterMetadata,\r\n  DraftHandleValue,\r\n  Modifier,\r\n  RichUtils,\r\n  getDefaultKeyBinding,\r\n} from 'draft-js'\r\nimport exampleYml from 'data/1_SignIn'\r\nimport { log } from 'utils'\r\n\r\nexport interface UseYamlEditorOptions {\r\n  onYmlChange: (yml: React.ChangeEvent<any> | string) => any\r\n  getIndentation?: (text: string) => string\r\n  insertNewLine?: (editorState: EditorState) => EditorState\r\n  removeIndent?: (editorState: EditorState) => EditorState | undefined\r\n  delay?: number\r\n}\r\n\r\nfunction useYamlEditor({\r\n  onYmlChange,\r\n  delay: delayProp = 50,\r\n  getIndentation,\r\n  insertNewLine,\r\n  removeIndent,\r\n}: UseYamlEditorOptions) {\r\n  const [delay, setDelay] = React.useState(delayProp)\r\n  const [exampleInitialized, setExampledInitialized] = React.useState(false)\r\n  const [editorState, setEditorState] = React.useState(\r\n    EditorState.createEmpty(),\r\n  )\r\n\r\n  function initializeExample() {\r\n    const contentState = ContentState.createFromText(exampleYml)\r\n    const newEditorState = EditorState.createWithContent(contentState)\r\n    onChange(newEditorState, { contentState })\r\n    if (!exampleInitialized) setExampledInitialized(true)\r\n  }\r\n\r\n  function onChange(\r\n    nextEditorState: EditorState,\r\n    {\r\n      contentState = nextEditorState.getCurrentContent(),\r\n    }: { contentState?: ContentState } = {},\r\n  ) {\r\n    onYmlChange(contentState.getPlainText())\r\n    // const blockMap = contentState.getBlockMap()\r\n    setEditorState(() => {\r\n      return nextEditorState\r\n    })\r\n  }\r\n\r\n  /**\r\n   * @param { string } command - Key command\r\n   */\r\n  function handleKeyCommand(command: string) {\r\n    let newState\r\n\r\n    if (removeIndent) {\r\n      if (command === 'backspace') {\r\n        newState = removeIndent(editorState)\r\n      }\r\n    } else {\r\n      log({ msg: 'Please provide a removeIndent function', color: 'red' })\r\n    }\r\n\r\n    if (!newState) {\r\n      newState = RichUtils.handleKeyCommand(editorState, command)\r\n    }\r\n\r\n    if (newState) {\r\n      onChange(newState)\r\n      return 'handled'\r\n    }\r\n\r\n    return 'not-handled'\r\n  }\r\n\r\n  function onPastedText(text: string): DraftHandleValue {\r\n    try {\r\n      const contentState = ContentState.createFromText(text)\r\n      const nextEditorState = EditorState.createWithContent(contentState)\r\n      onChange(nextEditorState, { contentState })\r\n      return 'handled'\r\n    } catch (error) {\r\n      console.error(error)\r\n      return 'not-handled'\r\n    }\r\n  }\r\n\r\n  function keyBindingFn(e: React.KeyboardEvent<any>) {\r\n    const command = undefined\r\n    // const command = getKeyBinding(e)\r\n    return command || getDefaultKeyBinding(e)\r\n  }\r\n\r\n  /** Detects and persists indentation when enter is pressed\r\n   * @param { object } e - Event object\r\n   */\r\n  function onReturn(e: React.KeyboardEvent<any>): DraftHandleValue {\r\n    if (!insertNewLine) {\r\n      log({ msg: 'Please provide an insertNewLine function', color: 'red' })\r\n      return 'not-handled'\r\n    }\r\n    onChange(insertNewLine(editorState))\r\n    return 'handled'\r\n  }\r\n\r\n  /** Adds two spaces\r\n   * @param { object } e - Event object\r\n   */\r\n  function onTab(e: React.KeyboardEvent<any>): DraftHandleValue {\r\n    e.preventDefault()\r\n\r\n    if (!getIndentation) {\r\n      log({\r\n        msg: 'Please pass in a getIndentation function for tabs to be handled',\r\n        color: 'red',\r\n      })\r\n      return 'not-handled'\r\n    }\r\n\r\n    const contentState = editorState.getCurrentContent()\r\n    const selectionState = editorState.getSelection()\r\n    const startKey = selectionState.getStartKey()\r\n    const currentBlock = contentState.getBlockForKey(startKey)\r\n\r\n    const indentation = getIndentation(currentBlock.getText())\r\n\r\n    let newContentState\r\n\r\n    if (selectionState.isCollapsed()) {\r\n      newContentState = Modifier.insertText(\r\n        contentState,\r\n        selectionState,\r\n        indentation,\r\n      )\r\n    } else {\r\n      newContentState = Modifier.replaceText(\r\n        contentState,\r\n        selectionState,\r\n        indentation,\r\n      )\r\n    }\r\n\r\n    const newEditorState = EditorState.push(\r\n      editorState,\r\n      newContentState,\r\n      'insert-characters',\r\n    )\r\n\r\n    onChange(newEditorState, { contentState: newContentState })\r\n    return 'handled'\r\n  }\r\n\r\n  return {\r\n    editorState,\r\n    onChange,\r\n    keyBindingFn,\r\n    handleKeyCommand,\r\n    onReturn,\r\n    onPastedText,\r\n    onTab,\r\n    delay,\r\n    setDelay,\r\n    exampleInitialized,\r\n    initializeExample,\r\n  }\r\n}\r\n\r\nexport default useYamlEditor\r\n","export default `\r\npageName: SignIn\r\ncomponents:\r\n  - type: view\r\n    componentId: bodyContainer\r\n    style:\r\n      left: \"0\"\r\n      top: \"0\"\r\n      width: \"1\"\r\n      height: \"1\"\r\n    children:\r\n      - type: image\r\n        componentId: bodyBackgroundImage\r\n        path: signInBackground.png\r\n        style:\r\n          left: \"0\"\r\n          top: \"0\"\r\n          width: \"1\"\r\n          height: \"1\"\r\n      - type: image\r\n        componentId: aitmedLogoImage\r\n        path: aitmedLogo.png\r\n        style:\r\n          left: \"0.396\"\r\n          top: \"0.21\"\r\n          width: \"0.261\"\r\n          height: \"0.122\"\r\n      - type: label\r\n        componentId: signInLabel01\r\n        text: Sign in to your account\r\n        style:\r\n          color: \"0x3185c7ff\"\r\n          left: \"0.147\"\r\n          top: \"0.357\"\r\n          width: \"0.72\"\r\n          height: \"0.041\"\r\n          fontSize: \"16\"\r\n          textAlign: \r\n            x: center\r\n            y: center\r\n      - type: textField\r\n        componentId: phoneNumberTextField\r\n        contentType: phoneNumber\r\n        placeholder: Phone Number\r\n        style:\r\n          fontSize: \"14\"\r\n          left: \"0.134\"\r\n          top: \"0.470\"\r\n          width: \"0.747\"\r\n          height: \"0.041\"\r\n          border:\r\n            style: \"2\"\r\n      - type: textField\r\n        componentId: passwordTextField\r\n        contentType: password\r\n        placeholder: Password\r\n        style:\r\n          fontSize: \"14\"\r\n          left: \"0.134\"\r\n          top: \"0.554\"\r\n          width: \"0.747\"\r\n          height: \"0.041\"\r\n          border:\r\n            style: \"2\"\r\n      - type: view\r\n        componentId: signInContainer\r\n        style:\r\n          left: \"0.359\"\r\n          top: \"0.7\"\r\n          width: \"0.406\"\r\n          height: \"0.06\"\r\n        children:\r\n          - type: label\r\n            componentId: signInLabel02\r\n            text: Sign in\r\n            style:\r\n              fontSize: \"19\"\r\n              fontStyle: bold\r\n              left: \"0\"\r\n              top: \"0\"\r\n              width: \"0.2\"\r\n              height: \"0.06\"\r\n          - type: button\r\n            componentId: signInButton\r\n            path: signIn.png\r\n            onClick: signIn\r\n            style:\r\n              backgroundColor: \"0x3185c7ff\"\r\n              left: \"0.267\"\r\n              top: \"0\"\r\n              width: \"0.235\"\r\n              height: \"0.06\"\r\n              border:\r\n                style: \"5\"\r\n              borderRadius: \"15\"\r\n      - type: view\r\n        componentId: signUpContainer\r\n        style:\r\n          left: \"0.134\"\r\n          top: \"0.89\"\r\n          width: \"0.752\"\r\n          height: \"0.054\"\r\n        children:\r\n          - type: label\r\n            componentId: noAccountLabel\r\n            text: Don't have an account?\r\n            style:\r\n              fontSize: \"12\"\r\n              left: \"0\"\r\n              top: \"0\"\r\n              width: \"0.5\"\r\n              height: \"0.054\"\r\n          - type: button\r\n            componentId: signUpButton\r\n            text: Sign Up\r\n            style:\r\n              color: \"0x3185c7ff\"\r\n              fontSize: \"12\"\r\n              left: \"0.48\"\r\n              top: \"0\"\r\n              width: \"0.25\"\r\n              height: \"0.054\"\r\n            onClick: goToSignUp\r\n`\r\n","import { Map as ImmutableMap } from 'immutable'\r\n\r\nconst blockRenderMap = ImmutableMap({\r\n  'header-one': {\r\n    element: 'code',\r\n  },\r\n  'header-two': {\r\n    element: 'code',\r\n  },\r\n  'header-three': {\r\n    element: 'code',\r\n  },\r\n  'header-four': {\r\n    element: 'code',\r\n  },\r\n  'header-five': {\r\n    element: 'code',\r\n  },\r\n  'header-six': {\r\n    element: 'code',\r\n  },\r\n  blockquote: {\r\n    element: 'code',\r\n  },\r\n  'code-block': {\r\n    element: 'code',\r\n  },\r\n  atomic: {\r\n    element: 'code',\r\n  },\r\n  'ordered-list-item': {\r\n    element: 'code',\r\n  },\r\n  'unordered-list-item': {\r\n    element: 'code',\r\n  },\r\n  unstyled: {\r\n    element: 'code',\r\n  },\r\n})\r\n\r\nexport default blockRenderMap\r\n","import React from 'react'\r\nimport { ContentBlock, EditorBlock } from 'draft-js'\r\n\r\nexport function CodeBlock({ block, ...props }: { block: ContentBlock }) {\r\n  const text = block.getText()\r\n  return (\r\n    <code style={{ fontSize: 12 }}>\r\n      <EditorBlock block={block} {...props}>\r\n        {text}\r\n      </EditorBlock>\r\n    </code>\r\n  )\r\n}\r\n\r\nfunction blockRendererFn(block: ContentBlock) {\r\n  // const data = contentState.getEntity(block.getEntityAt(0)).getData()\r\n  return {\r\n    component: CodeBlock,\r\n    editable: true,\r\n    props: {\r\n      block,\r\n    },\r\n  }\r\n}\r\n\r\nexport default blockRendererFn\r\n","import { List as ImmutableList, Record as ImmutableRecord } from 'immutable'\r\nimport detectNewline from 'detect-newline'\r\nimport detectIndent from 'detect-indent'\r\nimport endsWith from 'ends-with'\r\nimport { EditorState, Modifier } from 'draft-js'\r\n\r\nconst LineAnchor = ImmutableRecord({\r\n  line: Number(0), // Index of current line\r\n  offset: Number(0), // Offset in current line\r\n})\r\n\r\nLineAnchor.prototype.getLine = function () {\r\n  return this.get('line')\r\n}\r\n\r\nLineAnchor.prototype.getOffset = function () {\r\n  return this.get('offset')\r\n}\r\n\r\n/**\r\n * Return an anchor of a cursor in a block as a {line,offset} object\r\n *\r\n * @param { string } text\r\n * @param { number } offset\r\n * @param { string } seperator (optional)\r\n * @return { LineAnchor }\r\n */\r\nexport function getLineAnchorForOffset(\r\n  text: string,\r\n  offset: number,\r\n  seperator: string = getNewLine(text),\r\n) {\r\n  let lineIndex = 0\r\n  let nextLineIndex = 0\r\n  let lastLineIndex = 0\r\n\r\n  while (nextLineIndex >= 0 && nextLineIndex < offset) {\r\n    lineIndex++\r\n    lastLineIndex = nextLineIndex\r\n    nextLineIndex = text.indexOf(seperator, nextLineIndex + seperator.length)\r\n  }\r\n\r\n  return new LineAnchor({\r\n    line: lineIndex - 1,\r\n    offset: offset - lastLineIndex,\r\n  })\r\n}\r\n\r\n/**\r\n * Returns the indentation of a line\r\n * @param { string } line\r\n */\r\nexport function getIndentForLine(line: string): string {\r\n  return detectIndent(line).indent || ''\r\n}\r\n\r\n/**\r\n * Detects indentation in texts\r\n * @param { string } text\r\n * @return { string }\r\n */\r\nexport function getIndentation(text: string): string {\r\n  const result = detectIndent(text)\r\n  return result.indent || '  '\r\n}\r\n\r\n/**\r\n * Return a list of line in this text\r\n * @param {String} text\r\n * @param {String} seperator (optional)\r\n */\r\nexport function getLines(\r\n  text: string,\r\n  seperator: string = getNewLine(text),\r\n): ImmutableList<string> {\r\n  return ImmutableList(text.split(seperator))\r\n}\r\n\r\n/**\r\n * Detect the newline character of a string\r\n * @param { string } text\r\n */\r\nexport function getNewLine(text: string) {\r\n  return detectNewline(text) || '\\n'\r\n}\r\n\r\n/**\r\n *  Insert a new line with the computed indentation applied\r\n *\r\n * @param { EditorState } editorState\r\n */\r\nexport function insertNewLine(editorState: EditorState) {\r\n  const contentState = editorState.getCurrentContent()\r\n  const selectionState = editorState.getSelection()\r\n  const startKey = selectionState.getStartKey()\r\n  const startOffset = selectionState.getStartOffset()\r\n  const currentBlock = contentState.getBlockForKey(startKey)\r\n  const blockText = currentBlock.getText()\r\n\r\n  let newContentState\r\n\r\n  // Detect newline separation\r\n  const newLine = getNewLine(blockText)\r\n\r\n  // Add or replace\r\n  if (selectionState.isCollapsed()) {\r\n    // Create line to insert with right indentation\r\n    const lines = getLines(blockText, newLine)\r\n    const currentLineIndex = getLineAnchorForOffset(\r\n      blockText,\r\n      startOffset,\r\n      newLine,\r\n      // @ts-ignore\r\n    ).getLine()\r\n    const currentLine = lines.get(currentLineIndex)\r\n    const lineToInsert = newLine + getIndentForLine(currentLine)\r\n\r\n    newContentState = Modifier.insertText(\r\n      contentState,\r\n      selectionState,\r\n      lineToInsert,\r\n    )\r\n  } else {\r\n    newContentState = Modifier.replaceText(\r\n      contentState,\r\n      selectionState,\r\n      newLine,\r\n    )\r\n  }\r\n\r\n  const newEditorState = EditorState.push(\r\n    editorState,\r\n    newContentState,\r\n    'insert-characters',\r\n  )\r\n\r\n  return EditorState.forceSelection(\r\n    newEditorState,\r\n    newContentState.getSelectionAfter(),\r\n  )\r\n}\r\n\r\n/**\r\n * Removes the last indentation before cursor. Returns undefined if no\r\n *    modifications were done\r\n * @param { EditorState } editorState\r\n * @return { EditorState | undefined }\r\n */\r\nexport function removeIndent(\r\n  editorState: EditorState,\r\n): EditorState | undefined {\r\n  const contentState = editorState.getCurrentContent()\r\n  const selectionState = editorState.getSelection()\r\n\r\n  if (!selectionState.isCollapsed()) {\r\n    return\r\n  }\r\n\r\n  const startKey = selectionState.getStartKey()\r\n  const startOffset = selectionState.getStartOffset()\r\n  const currentBlock = contentState.getBlockForKey(startKey)\r\n  const blockText = currentBlock.getText()\r\n\r\n  // Detect newline separator and indentation\r\n  const newLine = getNewLine(blockText)\r\n  const indent = getIndentation(blockText)\r\n\r\n  // Get the current line\r\n  const lines = getLines(blockText, newLine)\r\n  const lineAnchor = getLineAnchorForOffset(blockText, startOffset, newLine)\r\n\r\n  // @ts-ignore\r\n  const currentLine = lines.get(lineAnchor.getLine())\r\n  // @ts-ignore\r\n  const beforeSelection = currentLine.slice(0, lineAnchor.getOffset())\r\n\r\n  // If the line before selectionState ending with the indentation?\r\n  if (!endsWith(beforeSelection, indent)) {\r\n    return\r\n  }\r\n\r\n  // Remove indent\r\n  const beforeIndentOffset = startOffset - indent.length\r\n  const rangeToRemove = selectionState.merge({\r\n    focusKey: startKey,\r\n    focusOffset: beforeIndentOffset,\r\n    anchorKey: startKey,\r\n    anchorOffset: startOffset,\r\n    isBackward: true,\r\n  })\r\n\r\n  const newContentState = Modifier.removeRange(\r\n    contentState,\r\n    // @ts-ignore\r\n    rangeToRemove,\r\n    'backward',\r\n  )\r\n  const newEditorState = EditorState.push(\r\n    editorState,\r\n    newContentState,\r\n    'remove-range',\r\n  )\r\n\r\n  return EditorState.forceSelection(\r\n    newEditorState,\r\n    newContentState.getSelectionAfter(),\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport styled from 'styled-components'\r\nimport { Editor } from 'draft-js'\r\nimport useYamlEditor from 'hooks/useYamlEditor'\r\nimport blockRenderMap from './blockRenderMap'\r\nimport blockRendererFn from './blockRendererFn'\r\nimport { getIndentation, insertNewLine, removeIndent } from './utils'\r\n\r\nexport interface YamlEditorProps {\r\n  onYmlChange: (yml: any) => any\r\n}\r\n\r\nconst StyledRoot = styled.div`\r\n  margin: 12px 0;\r\n`\r\n\r\nconst StyledEditor = styled.pre`\r\n  border: 1px solid rgba(0, 0, 0, 0.8);\r\n  border-radius: 4px;\r\n  box-shadow: 1px 1px 10px rgba(25, 37, 45, 0.15);\r\n  padding: 12px;\r\n  overflow-y: auto;\r\n  max-height: 550px;\r\n`\r\n\r\nfunction YamlEditor({ onYmlChange }: YamlEditorProps) {\r\n  const {\r\n    editorState,\r\n    onChange,\r\n    keyBindingFn,\r\n    handleKeyCommand,\r\n    onReturn,\r\n    onPastedText,\r\n    onTab,\r\n    exampleInitialized,\r\n    initializeExample,\r\n  } = useYamlEditor({\r\n    onYmlChange,\r\n    getIndentation,\r\n    insertNewLine,\r\n    removeIndent,\r\n  })\r\n\r\n  return (\r\n    <StyledRoot>\r\n      <Typography gutterBottom>\r\n        Paste or write YAML and elements will automatically appear.{' '}\r\n        <Button\r\n          size=\"small\"\r\n          type=\"button\"\r\n          variant=\"outlined\"\r\n          onClick={initializeExample}\r\n          disabled={exampleInitialized}\r\n        >\r\n          Initialize an example\r\n        </Button>\r\n      </Typography>\r\n      <StyledEditor>\r\n        <Editor\r\n          editorState={editorState}\r\n          onChange={onChange}\r\n          keyBindingFn={keyBindingFn}\r\n          handleKeyCommand={handleKeyCommand}\r\n          handleReturn={exampleInitialized ? undefined : onReturn}\r\n          onTab={onTab}\r\n          handlePastedText={onPastedText}\r\n          blockRenderMap={blockRenderMap}\r\n          blockRendererFn={blockRendererFn}\r\n        />\r\n      </StyledEditor>\r\n    </StyledRoot>\r\n  )\r\n}\r\n\r\nexport default React.memo(YamlEditor, () => false)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Grid, { GridProps } from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport interface PanelProps extends GridProps {\r\n  label?: React.ReactNode\r\n  sublabel?: React.ReactNode\r\n  textColor?: string\r\n}\r\n\r\nconst StyledRoot = styled(Grid)`\r\n  padding: 10px 12px;\r\n  /* border: 1px solid red; */\r\n  overflow: hidden;\r\n`\r\n\r\nconst StyledLabel = styled(Typography)`\r\n  text-align: center;\r\n  width: 100%;\r\n  display: block;\r\n  .sublabel {\r\n    display: block;\r\n    text-align: inherit;\r\n  }\r\n`\r\n\r\nfunction PanelHeader({\r\n  label,\r\n  sublabel,\r\n  textColor = 'rgba(0, 0, 0, 0.5)',\r\n}: Partial<PanelProps>) {\r\n  return sublabel ? (\r\n    <StyledLabel style={{ color: textColor }} variant=\"h6\">\r\n      <Typography variant=\"button\">{label}</Typography>\r\n      <Typography className=\"sublabel\" variant=\"caption\" paragraph>\r\n        {sublabel}\r\n      </Typography>\r\n    </StyledLabel>\r\n  ) : label ? (\r\n    <StyledLabel variant=\"button\">{label}</StyledLabel>\r\n  ) : null\r\n}\r\n\r\nfunction Panel({\r\n  label,\r\n  sublabel,\r\n  textColor = 'light',\r\n  children,\r\n  ...rest\r\n}: PanelProps) {\r\n  return (\r\n    <StyledRoot {...rest}>\r\n      <PanelHeader textColor={textColor} label={label} sublabel={sublabel} />\r\n      {children && <Typography component=\"div\">{children}</Typography>}\r\n    </StyledRoot>\r\n  )\r\n}\r\n\r\nexport default Panel\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentProps } from '@aitmed/react-uidl'\r\n\r\nfunction Button({\r\n  type,\r\n  style,\r\n  componentId,\r\n  children,\r\n  src,\r\n  uidl,\r\n  ...rest\r\n}: ComponentProps) {\r\n  const styles = {\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: uidl?.css.base?.fontSize,\r\n    borderStyle: uidl?.css.button?.borderStyle,\r\n    backgroundColor: uidl?.css?.base?.backgroundColor,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <button type=\"button\" style={styles} {...rest}>\r\n      {children}{' '}\r\n      {src && (\r\n        <img\r\n          src={src}\r\n          alt=\"'\"\r\n          style={{\r\n            width: '35%',\r\n            height: '35%',\r\n          }}\r\n        />\r\n      )}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n// import Button from './Button'\r\nimport { getDebugStyles, log } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface ImageProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  src?: string\r\n  uidl: any\r\n  children?: any\r\n}\r\n\r\nfunction Image({\r\n  children, // TODO: sometimes we're having buttons as a child\r\n  type,\r\n  style,\r\n  src,\r\n  componentId,\r\n  uidl,\r\n  ...rest\r\n}: ImageProps) {\r\n  // If an image has children, we will assume it is some icon button overlapping\r\n  //    Ex: profile photos and showing pencil icon on top to change it\r\n  if (children) {\r\n    log({\r\n      msg: 'Image has children',\r\n      color: '#c33a0b',\r\n      data: children,\r\n    })\r\n  }\r\n\r\n  const styles = {\r\n    ...uidl?.css?.image,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  let child\r\n\r\n  if (!children) {\r\n    return <img src={src} alt=\"\" style={styles} {...rest} />\r\n  } else if (children.props?.uidl?.component) {\r\n    child = uidl?.parseComponent(children.props.uidl.component)\r\n  }\r\n\r\n  return (\r\n    <div style={{ ...styles, position: 'relative' }}>\r\n      <img\r\n        src={src}\r\n        title={src}\r\n        alt=\"\"\r\n        style={{ border: '1px solid red', width: '100%', height: '100%' }}\r\n        {...rest}\r\n      />\r\n      {child}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\r\nimport { getDebugStyles, log } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface InputProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType | string\r\n  componentId: string\r\n  placeholder?: string\r\n  inputType?: string\r\n  uidl: any\r\n  children?: any\r\n  onChange?: any\r\n}\r\n\r\nfunction Input({\r\n  type = '',\r\n  style,\r\n  componentId,\r\n  inputType = 'text',\r\n  children,\r\n  uidl,\r\n  onChange: onChangeProp,\r\n  ...rest\r\n}: InputProps) {\r\n  const [value, setValue] = React.useState(\r\n    typeof children === 'string' ? children : '',\r\n  )\r\n\r\n  const props: any = {\r\n    type: inputType,\r\n    style: {\r\n      ...uidl?.css?.textField,\r\n      ...style,\r\n      ...getDebugStyles(),\r\n    },\r\n  }\r\n\r\n  if (children) {\r\n    log({\r\n      msg: `Input has children. ${\r\n        componentId ? 'Component ID: ' + componentId : ''\r\n      }`,\r\n      color: '#c92fb5',\r\n      data: children,\r\n    })\r\n  }\r\n\r\n  if (type.indexOf('.') !== -1) {\r\n    const narrowedType = type.split('.')?.[1]\r\n    if (narrowedType === 'date') props.type = 'date'\r\n    if (narrowedType === 'search') props.type = 'search'\r\n  }\r\n\r\n  function onChange(e: React.ChangeEvent<any>) {\r\n    if (typeof onChangeProp === 'function') {\r\n      onChangeProp(e)\r\n    }\r\n    setValue(e.target?.value)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      id={componentId}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...rest}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface LabelProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  children?: React.ReactNode\r\n  uidl: any\r\n}\r\n\r\nfunction Label({\r\n  style,\r\n  type,\r\n  componentId,\r\n  children,\r\n  uidl,\r\n  ...rest\r\n}: LabelProps) {\r\n  const styles = {\r\n    fontSize: uidl.css?.base?.fontSize,\r\n    color: uidl.css?.base?.color,\r\n    ...uidl.css?.label,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    <div style={styles} {...rest}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface DivProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  children?: React.ReactNode\r\n  uidl: any\r\n}\r\n\r\nfunction Div({ style, children, componentId, uidl }: DivProps) {\r\n  const styles = {\r\n    color: uidl?.css?.base?.color,\r\n    fontSize: uidl?.css?.base?.fontSize,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    <div id={componentId} style={styles}>\r\n      {Array.isArray(children) &&\r\n        // @ts-ignore\r\n        children.map((child, index: number) => (\r\n          <React.Fragment key={`uidlc-${index}`}>{child}</React.Fragment>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Div\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface SelectProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  selectOptions?: any[]\r\n  uidl: any\r\n}\r\n\r\nfunction Select({\r\n  type,\r\n  style,\r\n  componentId,\r\n  uidl,\r\n  selectOptions = [],\r\n  ...rest\r\n}: SelectProps) {\r\n  const [value, setValue] = React.useState('')\r\n\r\n  const styles = {\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  function onChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    setValue(e.target?.value)\r\n  }\r\n\r\n  return (\r\n    <select style={styles} value={value} onChange={onChange} {...rest}>\r\n      {selectOptions.map((option: any) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import Prynote from '@aitmed/prynote-sdk'\r\n\r\nexport const prynote = new Prynote({\r\n  apiVersion: 'v1beta1',\r\n  env: 'development',\r\n})\r\n","// Utility react hook for debugging UIDL - Renders a select field to\r\n//    select different pages\r\nimport React from 'react'\r\n\r\nexport function toSelectPageOptions(pages: string[]) {\r\n  return pages.map((page: string) => ({\r\n    key: page,\r\n    value: page,\r\n    label: page,\r\n  }))\r\n}\r\n\r\nfunction useSelectPage({\r\n  name = '',\r\n  pages = [],\r\n  navigate = () => {},\r\n  onChange,\r\n}: {\r\n  name?: string\r\n  pages?: string[]\r\n  onChange?: (page: string) => void\r\n  navigate: (to: string) => void\r\n}) {\r\n  const [selectedPage, setSelectedPage] = React.useState(name)\r\n\r\n  // const selectPage = React.useCallback(\r\n  //   (e: React.ChangeEvent<HTMLInputElement> | string) => {\r\n  //     if (typeof e === 'string') {\r\n  //       navigate('/' + e)\r\n  //     } else {\r\n  //       navigate('/' + e.target.value)\r\n  //     }\r\n  //   },\r\n  //   [navigate],\r\n  // )\r\n\r\n  function selectPage(e: React.ChangeEvent<HTMLInputElement> | string) {\r\n    if (typeof e === 'string') {\r\n      setSelectedPage(e)\r\n    } else {\r\n      setSelectedPage(e.target.value)\r\n    }\r\n  }\r\n\r\n  return {\r\n    selectedPage,\r\n    selectPage,\r\n    selectPageOptions: toSelectPageOptions(pages),\r\n  }\r\n}\r\n\r\nexport default useSelectPage\r\n","// Utility react hook for debugging UIDL - Renders a select field to\r\n//    select different device sizes\r\nimport React from 'react'\r\n\r\nexport type DeviceKey =\r\n  | 'galaxyS5'\r\n  | 'iPhone5'\r\n  | 'iPhone6_7_8'\r\n  | 'iPhone6_7_8_Plus'\r\n  | 'iPad'\r\n\r\nexport interface Device {\r\n  label: string\r\n  sizes: {\r\n    width: number\r\n    height: number\r\n  }\r\n}\r\n\r\nexport const devices: Record<DeviceKey, Device> = {\r\n  galaxyS5: {\r\n    label: 'Galaxy S5',\r\n    sizes: { width: 360, height: 640 },\r\n  },\r\n  iPhone5: {\r\n    label: 'iPhone 5',\r\n    sizes: { width: 320, height: 568 },\r\n  },\r\n  iPhone6_7_8: {\r\n    label: 'iPhone 6, 7, 8',\r\n    sizes: { width: 375, height: 667 },\r\n  },\r\n  iPhone6_7_8_Plus: {\r\n    label: 'iPhone 6, 7, 8 Plus',\r\n    sizes: { width: 414, height: 736 },\r\n  },\r\n  iPad: {\r\n    label: 'iPad',\r\n    sizes: { width: 768, height: 1024 },\r\n  },\r\n}\r\n\r\nexport const selectDeviceOptions = Object.keys(devices).map((deviceKey) => {\r\n  return {\r\n    key: deviceKey,\r\n    value: deviceKey,\r\n    label: devices[deviceKey as DeviceKey].label,\r\n  }\r\n})\r\n\r\nfunction useSelectDevice({\r\n  initialValue = 'galaxyS5',\r\n}: {\r\n  initialValue: DeviceKey | ''\r\n}) {\r\n  const [selectedDevice, setSelectedDevice] = React.useState(initialValue)\r\n\r\n  function selectDevice(e: React.ChangeEvent<any> | DeviceKey) {\r\n    if (typeof e === 'string') {\r\n      setSelectedDevice(e)\r\n    } else {\r\n      e.persist()\r\n      setSelectedDevice(e.target.value)\r\n    }\r\n  }\r\n\r\n  return {\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n  }\r\n}\r\n\r\nexport default useSelectDevice\r\n","import React from 'react'\r\nimport yaml from 'yaml'\r\nimport { useImmer } from 'use-immer'\r\nimport { prynote } from 'app/client'\r\nimport useSelectPage from 'hooks/useSelectPage'\r\nimport useSelectDevice from 'hooks/useSelectDevice'\r\n\r\nconst storedConfigKey = 'uidl-uw'\r\n\r\nexport interface UseUIDLState {\r\n  config: null | {\r\n    baseUrl: string\r\n    languageSuffix: { [key: string]: string }\r\n    fileSuffix: string\r\n    startPage: string\r\n    page: string[]\r\n  }\r\n  baseCss: null | {\r\n    pageName?: any\r\n    defaultValue?: any\r\n    globalVar?: any\r\n    classNames?: any\r\n  }\r\n  basePage: null | any\r\n  pages: string[]\r\n  initialPageYml: string\r\n}\r\n\r\nconst initialState: UseUIDLState = {\r\n  config: null,\r\n  baseCss: null,\r\n  basePage: null,\r\n  pages: [],\r\n  initialPageYml: '',\r\n}\r\n\r\nfunction useUIDL({\r\n  baseUrl,\r\n  location,\r\n  params = {},\r\n  navigate,\r\n  uidlEndpoint,\r\n}: {\r\n  baseUrl?: string\r\n  location: any\r\n  params: { page?: string } | undefined\r\n  navigate: (path: string) => any\r\n  uidlEndpoint: string\r\n}) {\r\n  const [state, setState] = useImmer(initialState)\r\n  const [yml, setYml] = React.useState('')\r\n  const [parsedYml, setParsedYml] = React.useState({})\r\n  const [parsingErrored, setParsingErrored] = React.useState(false)\r\n\r\n  const {\r\n    selectedDevice,\r\n    selectDevice,\r\n    selectDeviceOptions,\r\n  } = useSelectDevice({ initialValue: 'galaxyS5' })\r\n\r\n  const { selectedPage, selectPage, selectPageOptions } = useSelectPage({\r\n    name: '',\r\n    pages: state.pages,\r\n    navigate,\r\n  })\r\n\r\n  function onSelectDevice(e: any) {\r\n    selectDevice(e)\r\n  }\r\n\r\n  function onSelectPage(e: any) {\r\n    selectPage(e)\r\n  }\r\n\r\n  function onYmlChange(e: React.ChangeEvent<HTMLInputElement> | string) {\r\n    // Caller is directly using a YAML string\r\n    let parsed\r\n    if (typeof e === 'string') {\r\n      try {\r\n        parsed = yaml.parse(e)\r\n        if (parsingErrored) setParsingErrored(false)\r\n        setParsedYml(parsed)\r\n      } catch (error) {\r\n        if (!parsingErrored) setParsingErrored(true)\r\n        console.error(error)\r\n      }\r\n      setYml(e)\r\n    } else {\r\n      e.persist()\r\n      if (e.target.value !== yml) {\r\n        try {\r\n          parsed = yaml.parse(e.target.value)\r\n          if (parsingErrored) setParsingErrored(false)\r\n          setParsedYml(parsed)\r\n        } catch (error) {\r\n          console.error(error)\r\n          if (!parsingErrored) setParsingErrored(true)\r\n        }\r\n        setYml(e.target.value)\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    async function init() {\r\n      let config: any\r\n      if (typeof window !== 'undefined') {\r\n        config = window.localStorage.getItem(storedConfigKey)\r\n        if (config) {\r\n          config = JSON.parse(config)\r\n        } else {\r\n          config = await prynote.uidl.getUIDL(uidlEndpoint)\r\n          window.localStorage.setItem(storedConfigKey, JSON.stringify(config))\r\n        }\r\n        const { baseUrl = '', page: pages = [] } = config\r\n        const baseCss = await prynote.uidl.getUIDL(`${baseUrl}BaseCSS.yml`)\r\n        const basePage = await prynote.uidl.getUIDL(`${baseUrl}BasePage_en.yml`)\r\n\r\n        setState((draft) => {\r\n          draft.config = config\r\n          draft.baseCss = baseCss\r\n          draft.basePage = basePage\r\n          draft.pages = pages\r\n        })\r\n      }\r\n    }\r\n    init()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return {\r\n    ...state,\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n    selectPage,\r\n    selectedPage,\r\n    selectPageOptions,\r\n    yml,\r\n    parsedYml,\r\n    parsingErrored,\r\n    setYml,\r\n    onYmlChange,\r\n    onSelectDevice,\r\n    onSelectPage,\r\n  }\r\n}\r\n\r\nexport default useUIDL\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { SelectProps as MuiSelectProps } from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nexport interface SelectOption {\r\n  key?: string\r\n  value: string\r\n  label: string\r\n}\r\n\r\nexport interface SelectProps extends MuiSelectProps {\r\n  options: SelectOption[]\r\n  colorScheme?: 'light' | 'dark'\r\n}\r\n\r\nconst StyledSelect = styled(TextField)<{ colorScheme?: 'light' | 'dark' }>`\r\n  .select {\r\n    color: ${({ colorScheme }) => {\r\n      if (colorScheme === 'light') {\r\n        return 'rgba(0, 0, 0, 0.8)'\r\n      }\r\n      return '#fff'\r\n    }};\r\n  }\r\n  .input {\r\n    box-shadow: ${({ colorScheme }) => {\r\n      if (colorScheme === 'light') {\r\n        return '1px 1px 10px rgba(25, 37, 45, 0.15)'\r\n      }\r\n      return '1px 1px 10px rgba(255, 255, 255, 0.15)'\r\n    }};\r\n  }\r\n  .outline {\r\n    border: ${({ colorScheme }) => {\r\n      if (colorScheme === 'light') {\r\n        return '1px #37506c solid'\r\n      }\r\n      return '1px #fff solid'\r\n    }};\r\n    color: ${({ colorScheme }) => {\r\n      if (colorScheme === 'light') {\r\n        return 'rgba(0, 0, 0, 0.8)'\r\n      }\r\n      return '#fff'\r\n    }};\r\n  }\r\n  .label {\r\n    color: ${({ colorScheme }) => {\r\n      if (colorScheme === 'light') {\r\n        return 'rgba(0, 0, 0, 0.7)'\r\n      }\r\n      return '#fff'\r\n    }};\r\n  }\r\n  .arrow {\r\n    color: #fff;\r\n  }\r\n`\r\n\r\nfunction Select({\r\n  options,\r\n  InputProps,\r\n  InputLabelProps,\r\n  SelectProps,\r\n  colorScheme = 'light',\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <StyledSelect\r\n      margin=\"dense\"\r\n      InputProps={{\r\n        ...InputProps,\r\n        classes: {\r\n          root: 'input',\r\n          notchedOutline: 'outline',\r\n        },\r\n      }}\r\n      InputLabelProps={{\r\n        ...InputLabelProps,\r\n        classes: { root: 'label', ...InputLabelProps?.classes },\r\n        shrink: true,\r\n      }}\r\n      SelectProps={{\r\n        ...SelectProps,\r\n        classes: {\r\n          select: 'select',\r\n          outlined: 'outlined',\r\n          icon: 'arrow',\r\n          ...SelectProps?.classes,\r\n        },\r\n      }}\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      select\r\n      {...rest}\r\n    >\r\n      {options.map(({ value, key = value, label }: any) => (\r\n        <MenuItem key={key} value={value}>\r\n          {label}\r\n        </MenuItem>\r\n      ))}\r\n    </StyledSelect>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport Select, { SelectOption } from 'components/common/Select'\r\n\r\nexport interface ControlsProps {\r\n  device?: {\r\n    selected?: string\r\n    select?: (e: React.ChangeEvent<any>) => void | ((e: string) => void)\r\n    selectOptions?: SelectOption[]\r\n  }\r\n  page?: {\r\n    select?: (e: React.ChangeEvent<any>) => void | ((e: string) => void)\r\n    selected?: string\r\n    selectOptions?: SelectOption[]\r\n  }\r\n}\r\n\r\nfunction Controls({ device, page }: ControlsProps) {\r\n  return (\r\n    <>\r\n      {device && (\r\n        <Select\r\n          colorScheme=\"dark\"\r\n          name=\"device\"\r\n          label=\"Select Device\"\r\n          value={device.selected}\r\n          onChange={device.select}\r\n          options={device.selectOptions}\r\n        />\r\n      )}\r\n      <div style={{ width: 10 }} />\r\n      {page && (\r\n        <Select\r\n          name=\"page\"\r\n          label=\"Select Page\"\r\n          value={page.selected}\r\n          onChange={page.select}\r\n          options={page.selectOptions}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(Controls, (props, nextProps) => {\r\n  if (props.device) {\r\n    if (props.device.selected !== nextProps.device?.selected) {\r\n      return false\r\n    }\r\n  }\r\n  if (props.page) {\r\n    if (props.page.selected !== nextProps.page?.selected) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n})\r\n","import React from 'react'\r\nimport omit from 'lodash.omit'\r\nimport { UIDLComponent, UIDLPage } from '@aitmed/react-uidl'\r\nimport { Draft } from 'immer'\r\nimport { useImmer } from 'use-immer'\r\n\r\nconst initialState = {\r\n  ids: {\r\n    paths: [],\r\n    resources: [],\r\n    components: [],\r\n    componentTypes: [],\r\n    functions: [],\r\n    classNames: [],\r\n    texts: [],\r\n    dataModels: [],\r\n    dataIds: [],\r\n    placeholders: [],\r\n  },\r\n  paths: {},\r\n  resources: {},\r\n  components: {},\r\n  componentTypes: {},\r\n  functions: {},\r\n  classNames: {},\r\n  texts: {},\r\n  dataIds: {},\r\n  placeholders: {},\r\n}\r\n\r\nfunction traverseComponents(\r\n  components: UIDLComponent[] = [],\r\n  callback: (component: UIDLComponent) => any,\r\n) {\r\n  components.forEach((component: UIDLComponent) => {\r\n    if (component) {\r\n      callback(omit(component, ['children']))\r\n      if (Array.isArray(component.children)) {\r\n        traverseComponents(component.children, callback)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction usePageStatistics({ parsedYml }: { parsedYml: null | UIDLPage }) {\r\n  const [state, setState] = useImmer(initialState)\r\n\r\n  function resetDraft(draft: Draft<typeof initialState>) {\r\n    // Reset draft back to initial state before updating statistics\r\n    for (let key in initialState) {\r\n      if (key === 'ids') {\r\n        for (let idKey in initialState.ids) {\r\n          // @ts-ignore\r\n          draft.ids[idKey] = []\r\n        }\r\n      } else {\r\n        // @ts-ignore\r\n        draft[key] = {}\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (parsedYml) {\r\n      if (Array.isArray(parsedYml.components)) {\r\n        setState((draft) => {\r\n          // Reset draft back to initial state before updating statistics\r\n          resetDraft(draft)\r\n\r\n          traverseComponents(\r\n            parsedYml.components,\r\n            (component: UIDLComponent) => {\r\n              if (component) {\r\n                const {\r\n                  className,\r\n                  classNames,\r\n                  componentId,\r\n                  contentType,\r\n                  dataModel,\r\n                  dataId,\r\n                  onClick,\r\n                  onHover,\r\n                  placeholder,\r\n                  path,\r\n                  resource,\r\n                  style,\r\n                  type,\r\n                } = component\r\n                console.log(component)\r\n\r\n                // Classnames\r\n                if (className) {\r\n                  // @ts-ignore\r\n                  draft.ids.classNames.push(className)\r\n                  // @ts-ignore\r\n                  draft.classNames[className] = component\r\n                }\r\n                // Classnames\r\n                if (Array.isArray(classNames)) {\r\n                  classNames.forEach((cn) => {\r\n                    // @ts-ignore\r\n                    draft.ids.classNames.push(cn)\r\n                    // @ts-ignore\r\n                    draft.classNames[cn] = component\r\n                  })\r\n                }\r\n                // Component ids\r\n                if (componentId) {\r\n                  // @ts-ignore\r\n                  draft.ids.components.push(componentId)\r\n                  // @ts-ignore\r\n                  draft.components[componentId] = component\r\n                }\r\n                // Component types\r\n                if (type) {\r\n                  draft.ids.componentTypes.push(type)\r\n                  // @ts-ignore\r\n                  if (!draft.componentTypes[type]) {\r\n                    // @ts-ignore\r\n                    draft.componentTypes[type] = {}\r\n                  }\r\n                  // @ts-ignore\r\n                  draft.componentTypes[type][componentId] = component\r\n                }\r\n                // Content types\r\n                if (contentType) {\r\n                  //\r\n                }\r\n                // Data models\r\n                if (dataModel) {\r\n                  // @ts-ignore\r\n                  if (!draft.ids.dataModels.includes(dataModel)) {\r\n                    // @ts-ignore\r\n                    draft.ids.dataModels.push(dataModel)\r\n                  }\r\n                }\r\n                if (dataId) {\r\n                  // @ts-ignore\r\n                  draft.ids.dataIds.push(dataId)\r\n                  // @ts-ignore\r\n                  draft.dataIds[dataId] = component\r\n                }\r\n                // Functions\r\n                if (onClick) {\r\n                  // @ts-ignore\r\n                  draft.ids.functions.push(onClick)\r\n                  // @ts-ignore\r\n                  draft.functions[onClick] = component\r\n                }\r\n                if (onHover) {\r\n                  // @ts-ignore\r\n                  draft.ids.functions.push(onHover)\r\n                  // @ts-ignore\r\n                  draft.functions[onHover] = component\r\n                }\r\n                // Placeholders\r\n                if (placeholder) {\r\n                  // @ts-ignore\r\n                  draft.ids.placeholders.push(placeholder)\r\n                  // @ts-ignore\r\n                  draft.placeholders[placeholder] = component\r\n                }\r\n                // Assets\r\n                if (path) {\r\n                  // @ts-ignore\r\n                  draft.ids.paths.push(path)\r\n                  // @ts-ignore\r\n                  draft.paths[path] = component\r\n                }\r\n                if (resource) {\r\n                  // @ts-ignore\r\n                  draft.ids.resources.push(resource)\r\n                  // @ts-ignore\r\n                  draft.resources[resource] = component\r\n                }\r\n              }\r\n            },\r\n          )\r\n        })\r\n      } else {\r\n        setState((draft) => {\r\n          resetDraft(draft)\r\n        })\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [parsedYml])\r\n\r\n  return {\r\n    ...state,\r\n  }\r\n}\r\n\r\nexport default usePageStatistics\r\n","import React from 'react'\r\nimport MuiTooltip, {\r\n  TooltipProps as MuiTooltipProps,\r\n} from '@material-ui/core/Tooltip'\r\n\r\nexport interface TooltipProps extends MuiTooltipProps {\r\n  //\r\n}\r\n\r\nfunction Tooltip({ title, children, ...rest }: TooltipProps) {\r\n  const [opened, setOpened] = React.useState(false)\r\n\r\n  function onOpen(e: React.ChangeEvent<any>) {\r\n    setOpened(true)\r\n  }\r\n\r\n  function onClose(e: React.ChangeEvent<any>) {\r\n    setOpened(false)\r\n  }\r\n\r\n  return (\r\n    <MuiTooltip\r\n      title={title}\r\n      open={opened}\r\n      onOpen={onOpen}\r\n      onClose={onClose}\r\n      placement=\"top\"\r\n      arrow\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </MuiTooltip>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grow from '@material-ui/core/Grow'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport MuiBadge from '@material-ui/core/Badge'\r\nimport styled from 'styled-components'\r\nimport { UIDLPage } from '@aitmed/react-uidl'\r\nimport LabelIcon from '@material-ui/icons/Label'\r\nimport MergeTypeIcon from '@material-ui/icons/MergeType'\r\nimport FunctionsIcon from '@material-ui/icons/Functions'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport StorageIcon from '@material-ui/icons/Storage'\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\r\nimport usePageStatistics from 'hooks/usePageStatistics'\r\nimport Tooltip, { TooltipProps } from 'components/common/Tooltip'\r\n\r\nexport interface StatisticsProps {\r\n  parsedYml: null | UIDLPage\r\n  parsingErrored?: boolean\r\n}\r\n\r\nconst StyledBadge = styled(MuiBadge)`\r\n  margin: 0 15px;\r\n  :hover {\r\n    transform: scale(1.1);\r\n    transition: all 0.1s ease-out;\r\n  }\r\n`\r\n\r\nconst StyledCaption = styled(Typography)`\r\n  color: #09dc47;\r\n  font-weight: 700 !important;\r\n`\r\n\r\nfunction Statistics({ parsedYml, parsingErrored }: StatisticsProps) {\r\n  const stats = usePageStatistics({\r\n    parsedYml,\r\n  })\r\n\r\n  if (isEmpty(parsedYml)) {\r\n    return (\r\n      <Grow in>\r\n        <StyledCaption variant=\"overline\">\r\n          &nbsp;&nbsp;&nbsp; Waiting for YAML content...\r\n        </StyledCaption>\r\n      </Grow>\r\n    )\r\n  }\r\n\r\n  if (typeof parsedYml !== 'object') {\r\n    return null\r\n  }\r\n\r\n  if (parsingErrored) {\r\n    return (\r\n      <Grow in>\r\n        <StyledCaption color=\"error\" variant=\"overline\">\r\n          &nbsp;&nbsp;&nbsp; A parsing error occurred\r\n        </StyledCaption>\r\n      </Grow>\r\n    )\r\n  }\r\n\r\n  const {\r\n    ids,\r\n    paths,\r\n    resources,\r\n    components,\r\n    componentTypes,\r\n    functions,\r\n    classNames,\r\n    texts,\r\n    dataIds,\r\n    placeholders,\r\n  } = stats\r\n\r\n  const statisticBadges: (Partial<TooltipProps> & {\r\n    icon: React.ReactNode\r\n    tooltipTemplate: string\r\n    tooltipPlacement: 'top' | 'bottom'\r\n    badgeContent: number\r\n  })[] = [\r\n    {\r\n      title: 'Component IDs',\r\n      badgeContent: ids.components.length,\r\n      icon: <LabelIcon />,\r\n      tooltipTemplate: 'components',\r\n      tooltipPlacement: 'top',\r\n    },\r\n    {\r\n      title: 'Component Types',\r\n      badgeContent: ids.componentTypes.length,\r\n      icon: <MergeTypeIcon />,\r\n      tooltipTemplate: 'component types',\r\n      tooltipPlacement: 'bottom',\r\n    },\r\n    {\r\n      title: 'Functions',\r\n      badgeContent: ids.functions.length,\r\n      icon: <FunctionsIcon />,\r\n      tooltipTemplate: 'functions',\r\n      tooltipPlacement: 'top',\r\n    },\r\n    {\r\n      title: 'Class names',\r\n      badgeContent: ids.classNames.length,\r\n      icon: <StyleIcon />,\r\n      tooltipTemplate: 'classnames',\r\n      tooltipPlacement: 'bottom',\r\n    },\r\n    {\r\n      title: 'Texts',\r\n      badgeContent: ids.texts.length,\r\n      icon: <TextFieldsIcon />,\r\n      tooltipTemplate: 'texts',\r\n      tooltipPlacement: 'top',\r\n    },\r\n    {\r\n      title: 'Data Models',\r\n      badgeContent: ids.dataModels.length,\r\n      icon: <StorageIcon />,\r\n      tooltipTemplate: 'data models',\r\n      tooltipPlacement: 'bottom',\r\n    },\r\n    {\r\n      title: 'Data IDs',\r\n      badgeContent: ids.dataIds.length,\r\n      icon: <FingerprintIcon />,\r\n      tooltipTemplate: 'data ids',\r\n      tooltipPlacement: 'top',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      {statisticBadges.map(\r\n        (\r\n          {\r\n            title,\r\n            badgeContent,\r\n            icon,\r\n            tooltipTemplate = '',\r\n            tooltipPlacement,\r\n            ...rest\r\n          },\r\n          index: number,\r\n        ) => (\r\n          <Tooltip\r\n            title={\r\n              typeof badgeContent === 'number'\r\n                ? tooltipTemplate.replace(/\\%count/g, String(badgeContent))\r\n                : null\r\n            }\r\n            placement={tooltipPlacement}\r\n            enterTouchDelay={50}\r\n          >\r\n            <StyledBadge\r\n              key={`statistic-badge${index}`}\r\n              badgeContent={badgeContent}\r\n              max={99}\r\n              // @ts-ignore\r\n              color={badgeContent ? 'secondary' : 'default'}\r\n              showZero\r\n              {...rest}\r\n            >\r\n              {icon}\r\n            </StyledBadge>\r\n          </Tooltip>\r\n        ),\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default React.memo(Statistics)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nexport interface DocumentationItemProps {\r\n  icon: React.ReactNode\r\n  title?: string\r\n  description?: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  background-color: #333 !important;\r\n`\r\n\r\nconst StyledListItemText = styled(ListItemText)`\r\n  .title {\r\n    font-family: Hack, monospace;\r\n    color: #aa18c4;\r\n  }\r\n`\r\n\r\nfunction DocumentationItem({\r\n  icon,\r\n  title,\r\n  description,\r\n  disabled = false,\r\n}: DocumentationItemProps) {\r\n  return (\r\n    <List dense>\r\n      <ListItem disabled={disabled}>\r\n        <ListItemAvatar>\r\n          <StyledAvatar>{icon}</StyledAvatar>\r\n        </ListItemAvatar>\r\n        <StyledListItemText\r\n          classes={{\r\n            primary: 'title',\r\n          }}\r\n          primary={title}\r\n          secondary={description}\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default DocumentationItem\r\n","import React from 'react'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\r\nimport MinimizeIcon from '@material-ui/icons/Minimize'\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual'\r\nimport TitleIcon from '@material-ui/icons/Title'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport PhotoSizeSelectSmallIcon from '@material-ui/icons/PhotoSizeSelectSmall'\r\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport BurstModeIcon from '@material-ui/icons/BurstMode'\r\nimport MouseIcon from '@material-ui/icons/Mouse'\r\nimport HttpIcon from '@material-ui/icons/Http'\r\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport TocIcon from '@material-ui/icons/Toc'\r\nimport DocumentationItem from './Item'\r\n\r\nconst componentKeys = [\r\n  {\r\n    icon: <RadioButtonCheckedIcon />,\r\n    title: 'button',\r\n    description: 'Resolves to a <button /> html dom element',\r\n  },\r\n  {\r\n    icon: <MinimizeIcon />,\r\n    title: 'dateSelect',\r\n    description: '(Not supported) Resolves to a <TextField /> html dom element',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: <MinimizeIcon />,\r\n    title: 'divider',\r\n    description: 'Resolves to an <hr /> html dom element',\r\n  },\r\n  {\r\n    icon: <ViewHeadlineIcon />,\r\n    title: 'header',\r\n    description: 'Resolves to an <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <PhotoSizeSelectActualIcon />,\r\n    title: 'image',\r\n    description: 'Resolves to an <img /> html dom element',\r\n  },\r\n  {\r\n    icon: <TitleIcon />,\r\n    title: 'label',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <ListIcon />,\r\n    title: 'list',\r\n    description: '(Partially supported) Resolves to a <div /> html dom element',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: <SearchIcon />,\r\n    title: 'searchBar',\r\n    description: 'Resolves to an <input /> html dom element',\r\n  },\r\n  {\r\n    icon: <PhotoSizeSelectSmallIcon />,\r\n    title: 'select',\r\n    description: 'Resolves to a <select /> html dom element',\r\n  },\r\n  {\r\n    icon: <TextRotationNoneIcon />,\r\n    title: 'textField',\r\n    description: 'Resolves to an <input /> html dom element',\r\n  },\r\n  {\r\n    icon: <ViewCompactIcon />,\r\n    title: 'view',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <TocIcon />,\r\n    title: 'footer',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n]\r\n\r\nconst mouseIcon = <MouseIcon />\r\nconst functionKeys = [\r\n  {\r\n    icon: mouseIcon,\r\n    title: 'onClick',\r\n    description: 'Resolves to an onClick function',\r\n  },\r\n  {\r\n    icon: mouseIcon,\r\n    title: 'onHover',\r\n    description: '(Not supported) Resolves to an onHover function',\r\n    disabled: true,\r\n  },\r\n]\r\n\r\nconst assetKeys = [\r\n  {\r\n    icon: <BurstModeIcon />,\r\n    title: 'path',\r\n    description:\r\n      'Combines base url, appends /assets/ and concatenates path in the end',\r\n  },\r\n  {\r\n    icon: <HttpIcon />,\r\n    title: 'resource',\r\n    description:\r\n      'For some components, it\\'s set to rename it to \"src\" to support elements like <img /> during render phase',\r\n  },\r\n]\r\n\r\nconst aliasIcon = <ChevronRightIcon />\r\n\r\nconst aliases = [\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'className',\r\n    description:\r\n      'Searches global css and applies its styles if found (overrides any global styles if it encounters the same style keys)',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'classNames',\r\n    description:\r\n      'Searches global css and applies each style as they are found (overrides any global styles if it encounters the same style keys)',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'children',\r\n    description:\r\n      \"Components that will render as the current component's children\",\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'contentType',\r\n    description: 'Helps provide more specific info for text fields',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'dataId',\r\n    description:\r\n      '(Partially supported) Value binded to a data model key in the data model',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'dataModel',\r\n    description: '(Partially supported)',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'dataModels',\r\n    description: '(Partially supported)',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'text',\r\n    description: 'Resolves to a <div /> element',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'textColor',\r\n    description: 'Applies a color to text. Renamed to \"color\" before rendering',\r\n  },\r\n]\r\n\r\nconst stylesAliases = [\r\n  {\r\n    title: 'align',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Positioning for an html element, usually on an element containing multiple children',\r\n    Variations: ['centerX', 'centerY'],\r\n  },\r\n  {\r\n    title: 'border',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Describes styles for a border. Transformed and renamed to variety of border style keys before rendering',\r\n  },\r\n  {\r\n    title: 'fontStyle',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Font style for texts. Some values are transformed for fontWeight since they belong there instead',\r\n  },\r\n  {\r\n    title: 'textAlign',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Positioning for an html element, usually on an element containing a single child',\r\n  },\r\n  {\r\n    title: 'width',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Size representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n  {\r\n    title: 'height',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Size representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n  {\r\n    title: 'top',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Distance representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n  {\r\n    title: 'left',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Distance representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n]\r\n\r\nfunction DocumentationSection({\r\n  label,\r\n  children,\r\n  ...rest\r\n}: {\r\n  label?: React.ReactNode\r\n  children?: React.ReactNode\r\n}) {\r\n  return (\r\n    <ExpansionPanel {...rest}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography component=\"div\">{label}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nfunction Documentation() {\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <DocumentationSection label=\"Component types\">\r\n        <Typography component=\"div\">\r\n          {componentKeys.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-component${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Functions\">\r\n        <Typography component=\"div\">\r\n          {functionKeys.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-function${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Assets\">\r\n        <Typography component=\"div\">\r\n          {assetKeys.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-asset${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Aliases (keys)\">\r\n        <Typography component=\"div\">\r\n          {aliases.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-alias${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Style aliases (keys)\">\r\n        <Typography component=\"div\">\r\n          {stylesAliases.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-alias${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Documentation, () => true)\r\n","import React from 'react'\r\nimport { RouteChildrenProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport ReactUIDL from '@aitmed/react-uidl'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport useTheme from '@material-ui/core/styles/useTheme'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport YamlEditor from 'components/YamlEditor'\r\nimport Panel from 'components/Panel'\r\nimport Button from 'components/uidl/Button'\r\nimport Image from 'components/uidl/Image'\r\nimport Input from 'components/uidl/Input'\r\nimport Label from 'components/uidl/Label'\r\nimport Div from 'components/uidl/Div'\r\nimport UIDLSelect from 'components/uidl/Select'\r\nimport useUIDL from 'hooks/useUIDL'\r\nimport Controls from 'components/Controls'\r\nimport Statistics from 'components/Statistics'\r\nimport Documentation from 'components/Documentation'\r\nimport { devices, DeviceKey } from 'hooks/useSelectDevice'\r\nimport { log } from './utils/common'\r\n\r\nconst baseUrl = 'https://public.aitmed.com/alpha/'\r\nconst uidlEndpoint = `${baseUrl}uidlEndpoint.yml`\r\n\r\nfunction UIDLDiv({ style, ...props }: any) {\r\n  const styles = {\r\n    ...style,\r\n    ...(props.componentId === 'bodyContainer'\r\n      ? { background: '#fff' }\r\n      : undefined),\r\n    ...(props.componentId === 'header' ? { background: '#fff' } : undefined),\r\n  }\r\n  return <Div style={styles} {...props} />\r\n}\r\n\r\nconst StyledDocumentation = styled.div`\r\n  padding-top: 12px;\r\n  background: rgba(55, 61, 73, 0.975);\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background: rgba(55, 61, 73, 0.975) !important;\r\n`\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  margin: auto;\r\n`\r\n\r\nfunction App({\r\n  history,\r\n  location,\r\n  match,\r\n}: RouteChildrenProps<{ page?: string }>) {\r\n  const [vw, setVw] = React.useState(devices['galaxyS5'].sizes.width)\r\n  const [vh, setVh] = React.useState(devices['galaxyS5'].sizes.height)\r\n  const theme = useTheme()\r\n  const isWidescreen = useMediaQuery(theme.breakpoints.only('xl'))\r\n  const {\r\n    config,\r\n    baseCss,\r\n    basePage,\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n    yml,\r\n    parsedYml,\r\n    parsingErrored,\r\n    onYmlChange,\r\n  } = useUIDL({\r\n    baseUrl,\r\n    uidlEndpoint,\r\n    location,\r\n    params: match?.params,\r\n    navigate: history.push,\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    const device = devices[selectedDevice as DeviceKey]\r\n    setVw(device.sizes.width)\r\n    setVh(device.sizes.height)\r\n  }, [selectedDevice])\r\n\r\n  if (config && baseCss && basePage) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      log({ msg: 'config', color: 'olive', data: config })\r\n      log({ msg: 'baseCss', color: 'olive', data: baseCss })\r\n      log({ msg: 'basePage', color: 'olive', data: basePage })\r\n      // log({ msg: 'page', color: 'olive', data: parsedYml })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledDocumentation>\r\n        <Grid spacing={10} justify=\"center\" container>\r\n          <Panel\r\n            label=\"What's supported?\"\r\n            sublabel=\"Texts in purple represent keys\"\r\n            textColor=\"#fafafa\"\r\n            style={{\r\n              paddingLeft: 12,\r\n              paddingRight: 12,\r\n              overflow: 'hidden',\r\n            }}\r\n            xs={10}\r\n            sm={10}\r\n            md={6}\r\n            lg={5}\r\n            xl={5}\r\n            item\r\n          >\r\n            <Documentation />\r\n          </Panel>\r\n        </Grid>\r\n      </StyledDocumentation>\r\n      <div style={{ height: 35 }} />\r\n      <StyledAppBar position=\"relative\">\r\n        <StyledToolbar>\r\n          <Controls\r\n            device={{\r\n              selected: selectedDevice,\r\n              select: selectDevice,\r\n              selectOptions: selectDeviceOptions,\r\n            }}\r\n          />\r\n          <Statistics parsedYml={parsedYml} parsingErrored={parsingErrored} />\r\n        </StyledToolbar>\r\n      </StyledAppBar>\r\n      <Grid\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          minHeight: '100vh',\r\n          overflowX: 'hidden',\r\n        }}\r\n        justify=\"center\"\r\n        direction={\r\n          selectedDevice === 'iPad' && !isWidescreen ? 'column' : 'row'\r\n        }\r\n        container\r\n      >\r\n        <Panel xs={12} sm={6} md={5} lg={5} xl={5} item>\r\n          <Typography\r\n            component=\"div\"\r\n            align=\"center\"\r\n            variant=\"caption\"\r\n            color=\"secondary\"\r\n          >\r\n            {vw}px / {vh}px\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              margin: 'auto',\r\n              position: 'relative',\r\n              width: vw,\r\n              height: vh,\r\n              border: '2px solid magenta',\r\n            }}\r\n          >\r\n            <ReactUIDL\r\n              baseCss={baseCss}\r\n              basePage={basePage}\r\n              page={parsedYml}\r\n              config={config}\r\n              components={{\r\n                Button,\r\n                Image,\r\n                Input,\r\n                Label,\r\n                Div: UIDLDiv,\r\n                Select: UIDLSelect,\r\n              }}\r\n              viewportWidth={vw}\r\n              viewportHeight={vh}\r\n            />\r\n          </div>\r\n        </Panel>\r\n        <Panel xs={12} sm={6} md={7} lg={7} xl={5} item>\r\n          <div>\r\n            <YamlEditor onYmlChange={onYmlChange} />\r\n          </div>\r\n        </Panel>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport { AppContextValue } from './AppProvider'\r\n\r\nconst context = React.createContext<undefined | AppContextValue>(undefined)\r\n\r\nexport default context\r\n","import React from 'react'\r\nimport AuthContext from './AuthContext'\r\n\r\nexport interface AuthContextValue extends AuthContextState {\r\n  setAuthenticated?: (authenticated: boolean) => void\r\n  setCreatingAccount?: (creating: boolean) => void\r\n  setConfirmingPassword?: (confirming: boolean) => void\r\n  setPendingVCode?: (pending: boolean) => void\r\n  setVcode?: (code: string) => void\r\n  setTimedOutVCode?: (timedOut: boolean) => void\r\n  setErrorVCode?: (error: null | Error) => void\r\n}\r\n\r\nexport type AppContextAction =\r\n  | { type: 'set-authenticated'; authenticated: boolean }\r\n  | { type: 'set-vcode'; code: string }\r\n  | { type: 'set-vcode-in-process'; pending: boolean }\r\n  | { type: 'set-vcode-timed-out'; timedOut: boolean }\r\n  | { type: 'set-vcode-error'; error: null | Error }\r\n  | { type: 'set-creating-in-process'; creating: boolean }\r\n  | { type: 'set-creating-confirming-password'; confirming: boolean }\r\n\r\nexport interface AuthContextState {\r\n  authenticated: boolean\r\n  status: null | any\r\n  verification: {\r\n    code: null | string\r\n    pending: boolean\r\n    timedOut: boolean\r\n    error: null | Error\r\n  }\r\n  creating: {\r\n    pending: boolean\r\n    confirmingPassword: boolean\r\n  }\r\n}\r\n\r\nexport const initialState: AuthContextState = {\r\n  authenticated: false,\r\n  status: null,\r\n  verification: {\r\n    code: null,\r\n    pending: false,\r\n    timedOut: false,\r\n    error: null,\r\n  },\r\n  creating: {\r\n    pending: false,\r\n    confirmingPassword: false,\r\n  },\r\n}\r\n\r\nfunction reducer(\r\n  state: AuthContextState = initialState,\r\n  action: AppContextAction,\r\n): AuthContextState {\r\n  switch (action.type) {\r\n    case 'set-authenticated':\r\n      return { ...state, authenticated: action.authenticated }\r\n    case 'set-vcode':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, code: action.code },\r\n      }\r\n    case 'set-vcode-in-process':\r\n      return {\r\n        ...state,\r\n        verification: {\r\n          ...state.verification,\r\n          pending: action.pending,\r\n          timedOut: false,\r\n        },\r\n      }\r\n    case 'set-vcode-timed-out':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, timedOut: action.timedOut },\r\n      }\r\n    case 'set-vcode-error':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, error: action.error },\r\n      }\r\n    case 'set-creating-in-process':\r\n      return {\r\n        ...state,\r\n        creating: { ...state.creating, pending: action.creating },\r\n      }\r\n    case 'set-creating-confirming-password':\r\n      return {\r\n        ...state,\r\n        creating: { ...state.creating, confirmingPassword: action.confirming },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction AppProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n\r\n  function setAuthenticated(authenticated: boolean) {\r\n    dispatch({ type: 'set-authenticated', authenticated })\r\n  }\r\n\r\n  function setVcode(code: string) {\r\n    dispatch({ type: 'set-vcode', code })\r\n  }\r\n\r\n  function setPendingVCode(pending: boolean) {\r\n    dispatch({ type: 'set-vcode-in-process', pending })\r\n  }\r\n\r\n  function setTimedOutVCode(timedOut: boolean) {\r\n    dispatch({ type: 'set-vcode-timed-out', timedOut })\r\n  }\r\n\r\n  function setErrorVCode(err: null | Error) {\r\n    dispatch({ type: 'set-vcode-error', error: err })\r\n  }\r\n\r\n  function setCreatingAccount(creating: boolean) {\r\n    dispatch({ type: 'set-creating-in-process', creating })\r\n  }\r\n\r\n  function setConfirmingPassword(confirming: boolean) {\r\n    dispatch({ type: 'set-creating-confirming-password', confirming })\r\n  }\r\n\r\n  // Keep the authenticated state in sync with status\r\n  React.useEffect(() => {\r\n    if (!state.authenticated && state.status?.code === 0) {\r\n      // setAuthenticated(true)\r\n    }\r\n  }, [state.authenticated, state.status])\r\n\r\n  const ctx: AuthContextValue = {\r\n    ...state,\r\n    setAuthenticated,\r\n    setCreatingAccount,\r\n    setConfirmingPassword,\r\n    setVcode,\r\n    setPendingVCode,\r\n    setTimedOutVCode,\r\n    setErrorVCode,\r\n  }\r\n\r\n  return <AuthContext.Provider value={ctx}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AppProvider\r\n","import React from 'react'\r\nimport { initialState, AuthContextValue } from './AuthProvider'\r\n\r\nconst context = React.createContext<AuthContextValue>(initialState)\r\n\r\nexport default context\r\n","import React from 'react'\r\nimport { BaseCSS } from '@aitmed/react-uidl'\r\nimport { log } from 'utils'\r\nimport AppContext from './AppContext'\r\nimport AuthContext from './AuthContext'\r\n\r\nexport interface AppContextModalState {\r\n  name: string\r\n  opened: boolean\r\n  title: string\r\n  subtitle: string\r\n}\r\n\r\nexport interface AppContextValue extends AppContextState {\r\n  openModal?: (options?: Partial<AppContextModalState>) => void\r\n  closeModal?: (options?: Partial<AppContextModalState>) => void\r\n  setCss?: (css?: null | BaseCSS) => void\r\n}\r\n\r\nexport type AppContextAction =\r\n  | { type: 'open-modal'; modal?: any }\r\n  | { type: 'close-modal'; modal?: any }\r\n  | { type: 'set-css'; css: null | BaseCSS }\r\n\r\nexport interface AppContextState {\r\n  modal: AppContextModalState\r\n  css: null | BaseCSS\r\n}\r\n\r\nexport const initialState: AppContextState = {\r\n  modal: {\r\n    name: '',\r\n    opened: false,\r\n    title: '',\r\n    subtitle: '',\r\n  },\r\n  css: null,\r\n}\r\n\r\nfunction reducer(\r\n  state: AppContextState = initialState,\r\n  action: AppContextAction,\r\n): AppContextState {\r\n  switch (action.type) {\r\n    case 'open-modal':\r\n      return {\r\n        ...state,\r\n        modal: { ...state.modal, ...action.modal, opened: true },\r\n      }\r\n    case 'close-modal':\r\n      return {\r\n        ...state,\r\n        modal: { ...state.modal, ...action.modal, opened: false },\r\n      }\r\n    case 'set-css':\r\n      return { ...state, css: action.css }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction AppProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n  const authCtx = React.useContext(AuthContext)\r\n\r\n  function openModal(options?: Partial<AppContextModalState>) {\r\n    dispatch({ type: 'open-modal', modal: options })\r\n  }\r\n\r\n  function closeModal(options?: Partial<AppContextModalState>) {\r\n    dispatch({ type: 'close-modal', modal: options })\r\n  }\r\n\r\n  function setCss(css: null | BaseCSS = null) {\r\n    dispatch({ type: 'set-css', css: css })\r\n  }\r\n\r\n  // Keep the authenticated state in sync with status\r\n  React.useEffect(() => {\r\n    if (authCtx && !authCtx.authenticated && authCtx.status?.code === 0) {\r\n      // setAuthenticated(true)\r\n    }\r\n  }, [authCtx])\r\n\r\n  React.useEffect(() => {\r\n    log({\r\n      msg: 'AppProviderState:',\r\n      data: state,\r\n      color: 'olive',\r\n    })\r\n  }, [state])\r\n\r\n  const ctx = {\r\n    ...state,\r\n    openModal,\r\n    closeModal,\r\n    setCss,\r\n  }\r\n\r\n  return <AppContext.Provider value={ctx}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport default AppProvider\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport GlobalStyle from './app/GlobalStyle'\r\nimport App from './App'\r\nimport AppProvider from './AppProvider'\r\nimport AuthProvider from './AuthProvider'\r\nimport * as serviceWorker from 'serviceWorker'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <AuthProvider>\r\n      <AppProvider>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={App} exact />\r\n            <Route path=\"/:page\" component={App} />\r\n          </Switch>\r\n        </Router>\r\n      </AppProvider>\r\n    </AuthProvider>\r\n  </>,\r\n  document.getElementById('root'),\r\n)\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}
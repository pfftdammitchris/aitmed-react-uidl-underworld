{"version":3,"sources":["app/GlobalStyle.tsx","components/YamlEditor/YamlEditor.tsx","components/Panel/Panel.tsx","utils/common.ts","components/uidl/Button.tsx","components/uidl/Image.tsx","components/uidl/Input.tsx","components/uidl/Label.tsx","components/uidl/Div.tsx","components/uidl/Select.tsx","app/client.ts","hooks/useYamlEditor.tsx","hooks/useSelectPage.tsx","hooks/useSelectDevice.tsx","hooks/useUIDL.tsx","components/common/Select.tsx","components/Controls/Controls.tsx","components/Documentation/Item.tsx","components/Documentation/Documentation.tsx","App.tsx","Test/SectionContentRow.tsx","Test/Test.tsx","AppContext.tsx","AuthProvider.tsx","AuthContext.tsx","AppProvider.tsx","serviceWorker.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","StyledYamlEditorRoot","styled","div","YamlEditor","props","TextField","name","rows","rowsMax","label","InputLabelProps","classes","root","variant","color","spellCheck","InputProps","notchedOutline","margin","multiline","fullWidth","StyledRoot","Grid","StyledLabel","Typography","PanelHeader","sublabel","textColor","style","className","paragraph","Panel","children","rest","component","log","msg","obj","args","options","str","push","data","console","bind","window","Button","type","componentId","src","uidl","styles","outline","cursor","fontSize","css","base","borderStyle","button","backgroundColor","alt","width","height","Image","child","image","parseComponent","position","title","border","Input","inputType","onChangeProp","onChange","React","useState","value","setValue","textField","indexOf","narrowedType","split","id","e","target","Label","Div","Array","isArray","map","index","Fragment","key","Select","selectOptions","option","prynote","Prynote","apiVersion","env","initialState","yml","parsedYml","cache","useYamlEditor","initialValue","delay","delayProp","pageName","useImmer","state","setState","setDelay","parseYml","yaml","parse","error","useEffect","draft","setYml","persist","toSelectPageOptions","pages","page","useSelectPage","navigate","selectedPage","setSelectedPage","selectPage","selectPageOptions","devices","galaxyS5","sizes","iPhone5","iPhone6_7_8","iPhone6_7_8_Plus","iPad","selectDeviceOptions","Object","keys","deviceKey","useSelectDevice","selectedDevice","setSelectedDevice","selectDevice","config","baseCss","basePage","initialPageYml","useUIDL","baseUrl","location","params","uidlEndpoint","a","localStorage","getItem","JSON","getUIDL","setItem","stringify","init","url","axios","get","pageYml","alert","message","onSelectDevice","onSelectPage","StyledSelect","SelectProps","shrink","outlined","select","MenuItem","Controls","device","display","alignItems","selected","inline","StyledAvatar","Avatar","StyledListItemText","ListItemText","DocumentationItem","icon","description","disabled","dense","ListItem","ListItemAvatar","primary","secondary","componentKeys","mouseIcon","functionKeys","assetKeys","aliasIcon","aliases","stylesAliases","Variations","DocumentationSection","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","memo","UIDLDiv","background","undefined","StyledDocumentation","App","history","match","vw","setVw","vh","setVh","theme","useTheme","isWidescreen","useMediaQuery","breakpoints","only","spacing","justify","container","paddingLeft","paddingRight","overflow","xs","sm","md","lg","xl","item","minHeight","overflowX","direction","align","components","UIDLSelect","viewportWidth","viewportHeight","SectionContentRow","StyledSectionContent","Section","Test","context","createContext","authenticated","status","verification","code","pending","timedOut","creating","confirmingPassword","reducer","action","confirming","AppProvider","useReducer","dispatch","ctx","setAuthenticated","setCreatingAccount","setConfirmingPassword","setVcode","setPendingVCode","setTimedOutVCode","setErrorVCode","err","AuthContext","Provider","modal","opened","subtitle","authCtx","useContext","openModal","closeModal","setCss","AppContext","Boolean","hostname","ReactDOM","render","AuthProvider","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bab22e2c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #fafafa;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    box-sizing: border-box;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-weight: 500;\r\n  }\r\n\r\n  code, textarea {\r\n    font-family: Consolas !important;\r\n  }\r\n\r\n  button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .modal {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .modal-body {\r\n    /* max-height: 500px; */\r\n    background: red;\r\n  }\r\n\r\n\r\n  /* .modal; */\r\n\r\n  input::placeholder {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst StyledYamlEditorRoot = styled.div`\r\n  textarea {\r\n    color: rgba(0, 0, 0, 0.8);\r\n    font-size: 13px;\r\n  }\r\n  .input {\r\n    box-shadow: 1px 1px 10px rgba(25, 37, 45, 0.15);\r\n    padding-top: 16px;\r\n  }\r\n  .label {\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n  .notchedOutline {\r\n    /* border-color: #37506c; */\r\n    border: 1px #37506c solid;\r\n  }\r\n`\r\n\r\nfunction YamlEditor(props: {\r\n  value?: string\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => any\r\n}) {\r\n  return (\r\n    <StyledYamlEditorRoot>\r\n      <TextField\r\n        name=\"page\"\r\n        rows={15}\r\n        rowsMax={30}\r\n        label=\"Editor\"\r\n        InputLabelProps={{\r\n          classes: {\r\n            root: 'label',\r\n          },\r\n        }}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        spellCheck={false}\r\n        InputProps={{\r\n          classes: {\r\n            root: 'input',\r\n            notchedOutline: 'notchedOutline',\r\n          },\r\n        }}\r\n        margin=\"normal\"\r\n        multiline\r\n        fullWidth\r\n        {...props}\r\n      />\r\n    </StyledYamlEditorRoot>\r\n  )\r\n}\r\n\r\nexport default YamlEditor\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Grid, { GridProps } from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport interface PanelProps extends GridProps {\r\n  label?: React.ReactNode\r\n  sublabel?: React.ReactNode\r\n  textColor?: string\r\n}\r\n\r\nconst StyledRoot = styled(Grid)`\r\n  padding: 10px 12px;\r\n  /* border: 1px solid red; */\r\n  overflow: hidden;\r\n`\r\n\r\nconst StyledLabel = styled(Typography)`\r\n  text-align: center;\r\n  width: 100%;\r\n  display: block;\r\n  .sublabel {\r\n    display: block;\r\n    text-align: inherit;\r\n  }\r\n`\r\n\r\nfunction PanelHeader({\r\n  label,\r\n  sublabel,\r\n  textColor = 'rgba(0, 0, 0, 0.5)',\r\n}: Partial<PanelProps>) {\r\n  return sublabel ? (\r\n    <StyledLabel style={{ color: textColor }} variant=\"h6\">\r\n      <Typography variant=\"button\">{label}</Typography>\r\n      <Typography className=\"sublabel\" variant=\"caption\" paragraph>\r\n        {sublabel}\r\n      </Typography>\r\n    </StyledLabel>\r\n  ) : label ? (\r\n    <StyledLabel variant=\"button\">{label}</StyledLabel>\r\n  ) : null\r\n}\r\n\r\nfunction Panel({\r\n  label,\r\n  sublabel,\r\n  textColor = 'light',\r\n  children,\r\n  ...rest\r\n}: PanelProps) {\r\n  return (\r\n    <StyledRoot {...rest}>\r\n      <PanelHeader textColor={textColor} label={label} sublabel={sublabel} />\r\n      {children && <Typography component=\"div\">{children}</Typography>}\r\n    </StyledRoot>\r\n  )\r\n}\r\n\r\nexport default Panel\r\n","import React from 'react'\r\n\r\n/**\r\n * Runs a series of functions from left to right, passing in the argument of the\r\n *    invokee to each function\r\n * @param { function[] } fns - Arguments of functions\r\n */\r\n\r\nexport function callAll(...fns: any[]) {\r\n  return (...args: any[]) =>\r\n    fns.forEach((fn) => typeof fn === 'function' && fn(...args))\r\n}\r\n\r\n/**\r\n * Composes a series of functions from right to left, passing in the result of each function to\r\n *    the next function in the pipeline\r\n * @param { function[] } fns - Arguments of functions\r\n */\r\n\r\nexport function compose(...fns: Function[]) {\r\n  return (args?: any) => {\r\n    return fns.reduceRight(\r\n      (acc, fn) => (typeof fn === 'function' ? fn(acc) : acc),\r\n      args,\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Prints data to the console (colors are supported)\r\n * @param { string } msg - Console message\r\n */\r\nexport function log(msg: any, style?: any, obj?: any) {\r\n  let args = [`%c${msg}`]\r\n  if (msg && typeof msg === 'object') {\r\n    const options = msg\r\n    args = [`%c${options.msg}`]\r\n    let str = 'font-weight:bold;'\r\n    if (options.color) str += `color:${options.color};`\r\n    args.push(str)\r\n    if (options.data) args.push(options.data)\r\n  } else {\r\n    if (style) {\r\n      if (typeof style === 'string') {\r\n        args.push(style)\r\n      } else {\r\n        let str = 'font-weight:bold;'\r\n        if (style.color) str += `color:${style.color};`\r\n        args.push(str)\r\n      }\r\n    }\r\n    if (obj) args.push(obj)\r\n  }\r\n  console.log.bind(window.console, ...args)\r\n}\r\n\r\n/**\r\n * Converts a decimal value to a whole number. Strings will be converted to a number type\r\n * @param { number | string } value - Number value to convert\r\n */\r\nexport function decimalToWhole(value: any) {\r\n  return Number(value) * 100\r\n}\r\n\r\n/**\r\n * Used to highlight elements that its attached to like red borders, etc\r\n * @param { object } options - Object of html style attributes\r\n */\r\nexport function getDebugStyles(options?: React.CSSProperties) {\r\n  return {}\r\n  // return { border: '1px solid red', ...options }\r\n}\r\n\r\n/**\r\n * Returns true if there is a decimal in the number.\r\n * @param { number } value - Value to evaluate\r\n */\r\nexport function hasDecimal(value: any): boolean {\r\n  return Number(value) % 1 !== 0\r\n}\r\n\r\n/**\r\n * Returns true if there is any letter in the string\r\n * @param { string } value - Value to evaluate\r\n */\r\nexport function hasLetter(value: any): boolean {\r\n  return /[a-zA-Z]/i.test(String(value))\r\n}\r\n\r\n/**\r\n * Returns true if we are in the browser environment\r\n */\r\nexport function isBrowser() {\r\n  return typeof window !== 'undefined'\r\n}\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentProps } from '@aitmed/react-uidl'\r\n\r\nfunction Button({\r\n  type,\r\n  style,\r\n  componentId,\r\n  children,\r\n  src,\r\n  uidl,\r\n  ...rest\r\n}: ComponentProps) {\r\n  const styles = {\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: uidl?.css.base?.fontSize,\r\n    borderStyle: uidl?.css.button?.borderStyle,\r\n    backgroundColor: uidl?.css?.base?.backgroundColor,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <button type=\"button\" style={styles} {...rest}>\r\n      {children}{' '}\r\n      {src && (\r\n        <img\r\n          src={src}\r\n          alt=\"'\"\r\n          style={{\r\n            width: '35%',\r\n            height: '35%',\r\n          }}\r\n        />\r\n      )}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n// import Button from './Button'\r\nimport { getDebugStyles, log } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface ImageProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  src?: string\r\n  uidl: any\r\n  children?: any\r\n}\r\n\r\nfunction Image({\r\n  children, // TODO: sometimes we're having buttons as a child\r\n  type,\r\n  style,\r\n  src,\r\n  componentId,\r\n  uidl,\r\n  ...rest\r\n}: ImageProps) {\r\n  // If an image has children, we will assume it is some icon button overlapping\r\n  //    Ex: profile photos and showing pencil icon on top to change it\r\n  if (children) {\r\n    log({\r\n      msg: 'Image has children',\r\n      color: '#c33a0b',\r\n      data: children,\r\n    })\r\n  }\r\n\r\n  const styles = {\r\n    ...uidl?.css?.image,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  let child\r\n\r\n  if (!children) {\r\n    return <img src={src} alt=\"\" style={styles} {...rest} />\r\n  } else if (children.props?.uidl?.component) {\r\n    child = uidl?.parseComponent(children.props.uidl.component)\r\n  }\r\n\r\n  return (\r\n    <div style={{ ...styles, position: 'relative' }}>\r\n      <img\r\n        src={src}\r\n        title={src}\r\n        alt=\"\"\r\n        style={{ border: '1px solid red', width: '100%', height: '100%' }}\r\n        {...rest}\r\n      />\r\n      {child}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\r\nimport { getDebugStyles, log } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface InputProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType | string\r\n  componentId: string\r\n  placeholder?: string\r\n  inputType?: string\r\n  uidl: any\r\n  children?: any\r\n  onChange?: any\r\n}\r\n\r\nfunction Input({\r\n  type = '',\r\n  style,\r\n  componentId,\r\n  inputType = 'text',\r\n  children,\r\n  uidl,\r\n  onChange: onChangeProp,\r\n  ...rest\r\n}: InputProps) {\r\n  const [value, setValue] = React.useState(\r\n    typeof children === 'string' ? children : '',\r\n  )\r\n\r\n  const props: any = {\r\n    type: inputType,\r\n    style: {\r\n      ...uidl?.css?.textField,\r\n      ...style,\r\n      ...getDebugStyles(),\r\n    },\r\n  }\r\n\r\n  if (children) {\r\n    log({\r\n      msg: `Input has children. ${\r\n        componentId ? 'Component ID: ' + componentId : ''\r\n      }`,\r\n      color: '#c92fb5',\r\n      data: children,\r\n    })\r\n  }\r\n\r\n  if (type.indexOf('.') !== -1) {\r\n    const narrowedType = type.split('.')?.[1]\r\n    if (narrowedType === 'date') props.type = 'date'\r\n    if (narrowedType === 'search') props.type = 'search'\r\n  }\r\n\r\n  function onChange(e: React.ChangeEvent<any>) {\r\n    if (typeof onChangeProp === 'function') {\r\n      onChangeProp(e)\r\n    }\r\n    setValue(e.target?.value)\r\n  }\r\n\r\n  return (\r\n    <input\r\n      id={componentId}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...rest}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface LabelProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  children?: React.ReactNode\r\n  uidl: any\r\n}\r\n\r\nfunction Label({\r\n  style,\r\n  type,\r\n  componentId,\r\n  children,\r\n  uidl,\r\n  ...rest\r\n}: LabelProps) {\r\n  const styles = {\r\n    fontSize: uidl.css?.base?.fontSize,\r\n    color: uidl.css?.base?.color,\r\n    ...uidl.css?.label,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    <div style={styles} {...rest}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface DivProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  children?: React.ReactNode\r\n  uidl: any\r\n}\r\n\r\nfunction Div({ style, children, componentId, uidl }: DivProps) {\r\n  const styles = {\r\n    color: uidl?.css?.base?.color,\r\n    fontSize: uidl?.css?.base?.fontSize,\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  return (\r\n    <div id={componentId} style={styles}>\r\n      {Array.isArray(children) &&\r\n        // @ts-ignore\r\n        children.map((child, index: number) => (\r\n          <React.Fragment key={`uidlc-${index}`}>{child}</React.Fragment>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Div\r\n","import React from 'react'\r\nimport { getDebugStyles } from 'utils'\r\nimport { ComponentType } from '../../types'\r\n\r\nexport interface SelectProps {\r\n  style: React.CSSProperties\r\n  type: ComponentType\r\n  componentId: string\r\n  selectOptions?: any[]\r\n  uidl: any\r\n}\r\n\r\nfunction Select({\r\n  type,\r\n  style,\r\n  componentId,\r\n  uidl,\r\n  selectOptions = [],\r\n  ...rest\r\n}: SelectProps) {\r\n  const [value, setValue] = React.useState('')\r\n\r\n  const styles = {\r\n    ...style,\r\n    ...getDebugStyles(),\r\n  }\r\n\r\n  function onChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    setValue(e.target?.value)\r\n  }\r\n\r\n  return (\r\n    <select style={styles} value={value} onChange={onChange} {...rest}>\r\n      {selectOptions.map((option: any) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import Prynote from '@aitmed/prynote-sdk'\r\n\r\nexport const prynote = new Prynote({\r\n  apiVersion: 'v1beta1',\r\n  env: 'development',\r\n})\r\n","// Utility react hook for debugging UIDL - Provides controls for working\r\n//    with text fields. Ex: WYSIWYG UIDL editor\r\nimport React from 'react'\r\nimport {\r\n  normalizeBorderAttrs,\r\n  normalizeColorAttrs,\r\n  normalizeFontAttrs,\r\n  normalizePositionAttrs,\r\n  normalizeStyleAttrs,\r\n  prepareAssetUrl,\r\n  resolveAliases,\r\n  resolveAligns,\r\n  resolveChildren,\r\n  resolveClassNames,\r\n  resolvePositionAttrs,\r\n  resolveSizeAttrs,\r\n  resolveStyles,\r\n  resolveTagName,\r\n} from '@aitmed/react-uidl'\r\nimport yaml from 'yaml'\r\nimport { useImmer } from 'use-immer'\r\n\r\nconst initialState = {\r\n  yml: '',\r\n  parsedYml: {},\r\n  cache: {},\r\n}\r\n\r\nfunction useYamlEditor({\r\n  initialValue = '',\r\n  delay: delayProp = 50,\r\n  pageName,\r\n}: {\r\n  initialValue?: string\r\n  delay?: number\r\n  pageName?: string\r\n}) {\r\n  const [state, setState] = useImmer(initialState)\r\n  const [delay, setDelay] = React.useState(delayProp)\r\n\r\n  function parseYml(yml: string) {\r\n    try {\r\n      return yaml.parse(yml)\r\n    } catch (error) {\r\n      console.error(error)\r\n      return yml\r\n    }\r\n  }\r\n\r\n  /** Parses a string of YML\r\n   * @param { string } yml - Yaml string\r\n   */\r\n  function setYml(e: React.ChangeEvent<HTMLInputElement> | string) {\r\n    // Caller is directly using a YAML string\r\n    if (typeof e === 'string') {\r\n      if (e !== state.yml) {\r\n        setState((draft) => {\r\n          draft.yml = e\r\n          draft.parsedYml = parseYml(e)\r\n        })\r\n      }\r\n    } else {\r\n      e.persist()\r\n      if (e.target.value !== state.yml) {\r\n        setState((draft) => {\r\n          draft.yml = e.target.value\r\n          draft.parsedYml = parseYml(e.target.value)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (initialValue) {\r\n      setState((draft) => {\r\n        const parsedYml = yaml.parse(initialValue)\r\n        draft.yml = initialValue\r\n        draft.parsedYml = parsedYml\r\n      })\r\n    }\r\n  }, [initialValue, setState])\r\n\r\n  return {\r\n    ...state,\r\n    delay,\r\n    setDelay,\r\n    setYml,\r\n  }\r\n}\r\n\r\nexport default useYamlEditor\r\n","// Utility react hook for debugging UIDL - Renders a select field to\r\n//    select different pages\r\nimport React from 'react'\r\n\r\nexport function toSelectPageOptions(pages: string[]) {\r\n  return pages.map((page: string) => ({\r\n    key: page,\r\n    value: page,\r\n    label: page,\r\n  }))\r\n}\r\n\r\nfunction useSelectPage({\r\n  name = '',\r\n  pages = [],\r\n  navigate = () => {},\r\n  onChange,\r\n}: {\r\n  name?: string\r\n  pages?: string[]\r\n  onChange?: (page: string) => void\r\n  navigate: (to: string) => void\r\n}) {\r\n  const [selectedPage, setSelectedPage] = React.useState(name)\r\n\r\n  // const selectPage = React.useCallback(\r\n  //   (e: React.ChangeEvent<HTMLInputElement> | string) => {\r\n  //     if (typeof e === 'string') {\r\n  //       navigate('/' + e)\r\n  //     } else {\r\n  //       navigate('/' + e.target.value)\r\n  //     }\r\n  //   },\r\n  //   [navigate],\r\n  // )\r\n\r\n  function selectPage(e: React.ChangeEvent<HTMLInputElement> | string) {\r\n    if (typeof e === 'string') {\r\n      setSelectedPage(e)\r\n    } else {\r\n      setSelectedPage(e.target.value)\r\n    }\r\n  }\r\n\r\n  return {\r\n    selectedPage,\r\n    selectPage,\r\n    selectPageOptions: toSelectPageOptions(pages),\r\n  }\r\n}\r\n\r\nexport default useSelectPage\r\n","// Utility react hook for debugging UIDL - Renders a select field to\r\n//    select different device sizes\r\nimport React from 'react'\r\n\r\nexport type DeviceKey =\r\n  | 'galaxyS5'\r\n  | 'iPhone5'\r\n  | 'iPhone6_7_8'\r\n  | 'iPhone6_7_8_Plus'\r\n  | 'iPad'\r\n\r\nexport interface Device {\r\n  label: string\r\n  sizes: {\r\n    width: number\r\n    height: number\r\n  }\r\n}\r\n\r\nexport const devices: Record<DeviceKey, Device> = {\r\n  galaxyS5: {\r\n    label: 'Galaxy S5',\r\n    sizes: { width: 360, height: 640 },\r\n  },\r\n  iPhone5: {\r\n    label: 'iPhone 5',\r\n    sizes: { width: 320, height: 568 },\r\n  },\r\n  iPhone6_7_8: {\r\n    label: 'iPhone 6, 7, 8',\r\n    sizes: { width: 375, height: 667 },\r\n  },\r\n  iPhone6_7_8_Plus: {\r\n    label: 'iPhone 6, 7, 8 Plus',\r\n    sizes: { width: 414, height: 736 },\r\n  },\r\n  iPad: {\r\n    label: 'iPad',\r\n    sizes: { width: 768, height: 1024 },\r\n  },\r\n}\r\n\r\nexport const selectDeviceOptions = Object.keys(devices).map((deviceKey) => {\r\n  return {\r\n    key: deviceKey,\r\n    value: deviceKey,\r\n    label: devices[deviceKey as DeviceKey].label,\r\n  }\r\n})\r\n\r\nfunction useSelectDevice({\r\n  initialValue = 'galaxyS5',\r\n}: {\r\n  initialValue: DeviceKey | ''\r\n}) {\r\n  const [selectedDevice, setSelectedDevice] = React.useState(initialValue)\r\n\r\n  function selectDevice(e: React.ChangeEvent<any> | DeviceKey) {\r\n    if (typeof e === 'string') {\r\n      setSelectedDevice(e)\r\n    } else {\r\n      e.persist()\r\n      setSelectedDevice(e.target.value)\r\n    }\r\n  }\r\n\r\n  return {\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n  }\r\n}\r\n\r\nexport default useSelectDevice\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useImmer } from 'use-immer'\r\nimport { prynote } from 'app/client'\r\nimport useYamlEditor from 'hooks/useYamlEditor'\r\nimport useSelectPage from 'hooks/useSelectPage'\r\nimport useSelectDevice from 'hooks/useSelectDevice'\r\nimport { log } from '../utils/common'\r\n\r\nconst storedConfigKey = 'uidl-uw'\r\n\r\nexport interface UseUIDLState {\r\n  config: null | {\r\n    baseUrl: string\r\n    languageSuffix: { [key: string]: string }\r\n    fileSuffix: string\r\n    startPage: string\r\n    page: string[]\r\n  }\r\n  baseCss: null | {\r\n    pageName?: any\r\n    defaultValue?: any\r\n    globalVar?: any\r\n    classNames?: any\r\n  }\r\n  basePage: null | any\r\n  pages: string[]\r\n  initialPageYml: string\r\n}\r\n\r\nconst initialState: UseUIDLState = {\r\n  config: null,\r\n  baseCss: null,\r\n  basePage: null,\r\n  pages: [],\r\n  initialPageYml: '',\r\n}\r\n\r\nfunction useUIDL({\r\n  baseUrl,\r\n  location,\r\n  params = {},\r\n  navigate,\r\n  uidlEndpoint,\r\n}: {\r\n  baseUrl?: string\r\n  location: any\r\n  params: { page?: string } | undefined\r\n  navigate: (path: string) => any\r\n  uidlEndpoint: string\r\n}) {\r\n  const [state, setState] = useImmer(initialState)\r\n\r\n  const {\r\n    selectedDevice,\r\n    selectDevice,\r\n    selectDeviceOptions,\r\n  } = useSelectDevice({ initialValue: 'galaxyS5' })\r\n\r\n  const { selectedPage, selectPage, selectPageOptions } = useSelectPage({\r\n    name: '1_SignIn',\r\n    pages: state.pages,\r\n    navigate,\r\n  })\r\n\r\n  const { yml, parsedYml, setYml } = useYamlEditor({\r\n    initialValue: '',\r\n    pageName: selectedPage,\r\n  })\r\n\r\n  function onSelectDevice(e: any) {\r\n    selectDevice(e)\r\n  }\r\n\r\n  function onSelectPage(e: any) {\r\n    selectPage(e)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    async function init() {\r\n      let config: any\r\n      if (typeof window !== 'undefined') {\r\n        config = window.localStorage.getItem(storedConfigKey)\r\n        if (config) {\r\n          config = JSON.parse(config)\r\n        } else {\r\n          config = await prynote.uidl.getUIDL(uidlEndpoint)\r\n          window.localStorage.setItem(storedConfigKey, JSON.stringify(config))\r\n        }\r\n        const { baseUrl = '', page: pages = [] } = config\r\n        const baseCss = await prynote.uidl.getUIDL(`${baseUrl}BaseCSS.yml`)\r\n        const basePage = await prynote.uidl.getUIDL(`${baseUrl}BasePage_en.yml`)\r\n        // if (location?.pathname === '/') {\r\n        //   navigate(config.startPage || '1_SignIn')\r\n        // }\r\n\r\n        setState((draft) => {\r\n          draft.config = config\r\n          draft.baseCss = baseCss\r\n          draft.basePage = basePage\r\n          draft.pages = pages\r\n        })\r\n      }\r\n    }\r\n    init()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    async function getUIDL() {\r\n      try {\r\n        const url = `${state.config?.baseUrl || baseUrl}${selectedPage}_en.yml`\r\n        const { data: pageYml } = await axios.get(url)\r\n        setYml(pageYml)\r\n      } catch (error) {\r\n        console.error(error)\r\n        window.alert(error.message)\r\n      }\r\n    }\r\n    log({ msg: `Fetching uidl page \"${selectedPage}\"`, color: '#a80a7a' })\r\n    getUIDL()\r\n    // eslint-disable-next-line\r\n  }, [selectedPage])\r\n\r\n  return {\r\n    ...state,\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n    selectPage,\r\n    selectedPage,\r\n    selectPageOptions,\r\n    yml,\r\n    parsedYml,\r\n    setYml,\r\n    onSelectDevice,\r\n    onSelectPage,\r\n  }\r\n}\r\n\r\nexport default useUIDL\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { SelectProps as MuiSelectProps } from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nexport interface SelectOption {\r\n  key?: string\r\n  value: string\r\n  label: string\r\n}\r\n\r\nexport interface SelectProps extends MuiSelectProps {\r\n  options: SelectOption[]\r\n}\r\n\r\nconst StyledSelect = styled(TextField)`\r\n  option,\r\n  select {\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n  .input {\r\n    box-shadow: 1px 1px 10px rgba(25, 37, 45, 0.15);\r\n  }\r\n  .outline {\r\n    color: rgba(0, 0, 0, 0.8);\r\n    border: 1px #37506c solid;\r\n  }\r\n  .label {\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n`\r\n\r\nfunction Select({\r\n  options,\r\n  InputProps,\r\n  InputLabelProps,\r\n  SelectProps,\r\n  ...rest\r\n}: any) {\r\n  return (\r\n    <StyledSelect\r\n      margin=\"dense\"\r\n      InputProps={{\r\n        ...InputProps,\r\n        classes: {\r\n          root: 'input',\r\n          notchedOutline: 'outline',\r\n        },\r\n      }}\r\n      InputLabelProps={{\r\n        ...InputLabelProps,\r\n        classes: { root: 'label', ...InputLabelProps?.classes },\r\n        shrink: true,\r\n      }}\r\n      SelectProps={{\r\n        ...SelectProps,\r\n        classes: {\r\n          outlined: 'outlined',\r\n          ...SelectProps?.classes,\r\n        },\r\n      }}\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n      select\r\n      {...rest}\r\n    >\r\n      {options.map(({ value, key = value, label }: any) => (\r\n        <MenuItem key={key} value={value}>\r\n          {label}\r\n        </MenuItem>\r\n      ))}\r\n    </StyledSelect>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport Select, { SelectOption } from 'components/common/Select'\r\n\r\nexport interface ControlsProps {\r\n  device?: {\r\n    selected?: string\r\n    select?: (e: React.ChangeEvent<any>) => void | ((e: string) => void)\r\n    selectOptions?: SelectOption[]\r\n  }\r\n  page?: {\r\n    select?: (e: React.ChangeEvent<any>) => void | ((e: string) => void)\r\n    selected?: string\r\n    selectOptions?: SelectOption[]\r\n  }\r\n}\r\n\r\nfunction Controls({ device, page }: ControlsProps) {\r\n  return (\r\n    <div style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\r\n      {device && (\r\n        <Select\r\n          name=\"device\"\r\n          label=\"Select Device\"\r\n          value={device.selected}\r\n          onChange={device.select}\r\n          options={device.selectOptions}\r\n          inline\r\n        />\r\n      )}\r\n      <div style={{ width: 10 }} />\r\n      {page && (\r\n        <Select\r\n          name=\"page\"\r\n          label=\"Select Page\"\r\n          value={page.selected}\r\n          onChange={page.select}\r\n          options={page.selectOptions}\r\n          inline\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nexport interface DocumentationItemProps {\r\n  icon: React.ReactNode\r\n  title?: string\r\n  description?: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  background-color: #333 !important;\r\n`\r\n\r\nconst StyledListItemText = styled(ListItemText)`\r\n  .title {\r\n    font-family: Hack, monospace;\r\n    color: #aa18c4;\r\n  }\r\n`\r\n\r\nfunction DocumentationItem({\r\n  icon,\r\n  title,\r\n  description,\r\n  disabled = false,\r\n}: DocumentationItemProps) {\r\n  return (\r\n    <List dense>\r\n      <ListItem disabled={disabled}>\r\n        <ListItemAvatar>\r\n          <StyledAvatar>{icon}</StyledAvatar>\r\n        </ListItemAvatar>\r\n        <StyledListItemText\r\n          classes={{\r\n            primary: 'title',\r\n          }}\r\n          primary={title}\r\n          secondary={description}\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default DocumentationItem\r\n","import React from 'react'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\r\nimport MinimizeIcon from '@material-ui/icons/Minimize'\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual'\r\nimport TitleIcon from '@material-ui/icons/Title'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport PhotoSizeSelectSmallIcon from '@material-ui/icons/PhotoSizeSelectSmall'\r\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport BurstModeIcon from '@material-ui/icons/BurstMode'\r\nimport MouseIcon from '@material-ui/icons/Mouse'\r\nimport HttpIcon from '@material-ui/icons/Http'\r\nimport ViewHeadlineIcon from '@material-ui/icons/ViewHeadline'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DocumentationItem from './Item'\r\n\r\nconst componentKeys = [\r\n  {\r\n    icon: <RadioButtonCheckedIcon />,\r\n    title: 'button',\r\n    description: 'Resolves to a <button /> html dom element',\r\n  },\r\n  {\r\n    icon: <MinimizeIcon />,\r\n    title: 'dateSelect',\r\n    description: '(Not supported) Resolves to a <TextField /> html dom element',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: <MinimizeIcon />,\r\n    title: 'divider',\r\n    description: 'Resolves to an <hr /> html dom element',\r\n  },\r\n  {\r\n    icon: <ViewHeadlineIcon />,\r\n    title: 'header',\r\n    description: 'Resolves to an <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <PhotoSizeSelectActualIcon />,\r\n    title: 'image',\r\n    description: 'Resolves to an <img /> html dom element',\r\n  },\r\n  {\r\n    icon: <TitleIcon />,\r\n    title: 'label',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <ListIcon />,\r\n    title: 'list',\r\n    description: '(Partially supported) Resolves to a <div /> html dom element',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: <SearchIcon />,\r\n    title: 'searchBar',\r\n    description: 'Resolves to an <input /> html dom element',\r\n  },\r\n  {\r\n    icon: <PhotoSizeSelectSmallIcon />,\r\n    title: 'select',\r\n    description: 'Resolves to a <select /> html dom element',\r\n  },\r\n  {\r\n    icon: <TextRotationNoneIcon />,\r\n    title: 'textField',\r\n    description: 'Resolves to an <input /> html dom element',\r\n  },\r\n  {\r\n    icon: <ViewCompactIcon />,\r\n    title: 'view',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n]\r\n\r\nconst mouseIcon = <MouseIcon />\r\nconst functionKeys = [\r\n  {\r\n    icon: mouseIcon,\r\n    title: 'onClick',\r\n    description: 'Resolves to an onClick function',\r\n  },\r\n  {\r\n    icon: mouseIcon,\r\n    title: 'onHover',\r\n    description: '(Not supported) Resolves to an onHover function',\r\n    disabled: true,\r\n  },\r\n]\r\n\r\nconst assetKeys = [\r\n  {\r\n    icon: <BurstModeIcon />,\r\n    title: 'path',\r\n    description:\r\n      'Combines base url, appends /assets/ and concatenates path in the end',\r\n  },\r\n  {\r\n    icon: <HttpIcon />,\r\n    title: 'resource',\r\n    description:\r\n      'For some components, it\\'s set to rename it to \"src\" to support elements like <img /> during render phase',\r\n  },\r\n]\r\n\r\nconst aliasIcon = <ChevronRightIcon />\r\n\r\nconst aliases = [\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'className',\r\n    description:\r\n      'Searches global css and applies its styles if found (overrides any global styles if it encounters the same style keys)',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'classNames',\r\n    description:\r\n      'Searches global css and applies each style as they are found (overrides any global styles if it encounters the same style keys)',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'children',\r\n    description:\r\n      \"Components that will render as the current component's children\",\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'contentType',\r\n    description: 'Helps provide more specific info for text fields',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'dataId',\r\n    description:\r\n      '(Partially supported) Value binded to a data model key in the data model',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'dataModel',\r\n    description: '(Partially supported)',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'dataModels',\r\n    description: '(Partially supported)',\r\n    disabled: true,\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'text',\r\n    description: 'Resolves to a <div /> element',\r\n  },\r\n  {\r\n    icon: aliasIcon,\r\n    title: 'textColor',\r\n    description: 'Applies a color to text. Renamed to \"color\" before rendering',\r\n  },\r\n]\r\n\r\nconst stylesAliases = [\r\n  {\r\n    title: 'align',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Positioning for an html element, usually on an element containing multiple children',\r\n    Variations: ['centerX', 'centerY'],\r\n  },\r\n  {\r\n    title: 'border',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Describes styles for a border. Transformed and renamed to variety of border style keys before rendering',\r\n  },\r\n  {\r\n    title: 'fontStyle',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Font style for texts. Some values are transformed for fontWeight since they belong there instead',\r\n  },\r\n  {\r\n    title: 'textAlign',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Positioning for an html element, usually on an element containing a single child',\r\n  },\r\n  {\r\n    title: 'width',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Size representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n  {\r\n    title: 'height',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Size representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n  {\r\n    title: 'top',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Distance representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n  {\r\n    title: 'left',\r\n    icon: aliasIcon,\r\n    description:\r\n      'Distance representing a ratio relative to the viewport (Note: The viewport is the preview with a purple border)',\r\n  },\r\n]\r\n\r\nfunction DocumentationSection({\r\n  label,\r\n  children,\r\n  ...rest\r\n}: {\r\n  label?: React.ReactNode\r\n  children?: React.ReactNode\r\n}) {\r\n  return (\r\n    <ExpansionPanel {...rest}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography component=\"div\">{label}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nfunction Documentation() {\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <DocumentationSection label=\"Component types\">\r\n        <Typography component=\"div\">\r\n          {componentKeys.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-component${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Functions\">\r\n        <Typography component=\"div\">\r\n          {functionKeys.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-function${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Assets\">\r\n        <Typography component=\"div\">\r\n          {assetKeys.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-asset${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Aliases (keys)\">\r\n        <Typography component=\"div\">\r\n          {aliases.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-alias${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n      <DocumentationSection label=\"Style aliases (keys)\">\r\n        <Typography component=\"div\">\r\n          {stylesAliases.map((props, index: number) => (\r\n            <DocumentationItem key={`uidl-alias${index}`} {...props} />\r\n          ))}\r\n        </Typography>\r\n      </DocumentationSection>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Documentation, () => true)\r\n","import React from 'react'\r\nimport { RouteChildrenProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport ReactUIDL from '@aitmed/react-uidl'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport useTheme from '@material-ui/core/styles/useTheme'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport YamlEditor from 'components/YamlEditor'\r\nimport AutoSave from 'components/AutoSave'\r\nimport Panel from 'components/Panel'\r\nimport YamlEditorToolbar from 'components/YamlEditorToolbar'\r\nimport Button from 'components/uidl/Button'\r\nimport Image from 'components/uidl/Image'\r\nimport Input from 'components/uidl/Input'\r\nimport Label from 'components/uidl/Label'\r\nimport Div from 'components/uidl/Div'\r\nimport UIDLSelect from 'components/uidl/Select'\r\nimport useUIDL from 'hooks/useUIDL'\r\nimport Controls from 'components/Controls'\r\nimport { devices, DeviceKey } from 'hooks/useSelectDevice'\r\nimport Documentation from 'components/Documentation'\r\nimport { log } from './utils/common'\r\n\r\nconst baseUrl = 'https://public.aitmed.com/alpha/'\r\nconst uidlEndpoint = `${baseUrl}uidlEndpoint.yml`\r\n\r\nfunction UIDLDiv({ style, ...props }: any) {\r\n  const styles = {\r\n    ...style,\r\n    ...(props.componentId === 'bodyContainer'\r\n      ? { background: '#fff' }\r\n      : undefined),\r\n    ...(props.componentId === 'header' ? { background: '#fff' } : undefined),\r\n  }\r\n  return <Div style={styles} {...props} />\r\n}\r\n\r\nconst StyledDocumentation = styled.div`\r\n  padding-top: 12px;\r\n  background: rgba(55, 61, 73, 0.975);\r\n  box-sizing: border-box;\r\n`\r\n\r\nfunction App({\r\n  history,\r\n  location,\r\n  match,\r\n}: RouteChildrenProps<{ page?: string }>) {\r\n  const [vw, setVw] = React.useState(devices['galaxyS5'].sizes.width)\r\n  const [vh, setVh] = React.useState(devices['galaxyS5'].sizes.height)\r\n  const theme = useTheme()\r\n  const isWidescreen = useMediaQuery(theme.breakpoints.only('xl'))\r\n  const {\r\n    config,\r\n    baseCss,\r\n    basePage,\r\n    selectDevice,\r\n    selectedDevice,\r\n    selectDeviceOptions,\r\n    selectedPage,\r\n    selectPage,\r\n    selectPageOptions,\r\n    yml,\r\n    parsedYml,\r\n    setYml,\r\n  } = useUIDL({\r\n    baseUrl,\r\n    uidlEndpoint,\r\n    location,\r\n    params: match?.params,\r\n    navigate: history.push,\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    const device = devices[selectedDevice as DeviceKey]\r\n    setVw(device.sizes.width)\r\n    setVh(device.sizes.height)\r\n  }, [selectedDevice])\r\n\r\n  if (config && baseCss && basePage && parsedYml) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      log({ msg: 'config', color: 'olive', data: config })\r\n      log({ msg: 'baseCss', color: 'olive', data: baseCss })\r\n      log({ msg: 'basePage', color: 'olive', data: basePage })\r\n      log({ msg: 'page', color: 'olive', data: parsedYml })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledDocumentation>\r\n        <Grid spacing={10} justify=\"center\" container>\r\n          <Panel\r\n            label=\"What's supported?\"\r\n            sublabel=\"Texts in purple represent keys\"\r\n            textColor=\"#fafafa\"\r\n            style={{\r\n              paddingLeft: 12,\r\n              paddingRight: 12,\r\n              overflow: 'hidden',\r\n            }}\r\n            xs={10}\r\n            sm={10}\r\n            md={6}\r\n            lg={5}\r\n            xl={5}\r\n            item\r\n          >\r\n            <Documentation />\r\n          </Panel>\r\n        </Grid>\r\n      </StyledDocumentation>\r\n      <div style={{ height: 50 }} />\r\n      <Grid\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          minHeight: '100vh',\r\n          overflowX: 'hidden',\r\n        }}\r\n        justify=\"center\"\r\n        direction={\r\n          selectedDevice === 'iPad' && !isWidescreen ? 'column' : 'row'\r\n        }\r\n        container\r\n      >\r\n        <Panel xs={12} sm={6} md={5} lg={5} xl={5} item>\r\n          <Typography\r\n            component=\"div\"\r\n            align=\"center\"\r\n            variant=\"caption\"\r\n            color=\"secondary\"\r\n          >\r\n            {vw}px / {vh}px\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              margin: 'auto',\r\n              position: 'relative',\r\n              width: vw,\r\n              height: vh,\r\n              border: '2px solid magenta',\r\n            }}\r\n          >\r\n            <ReactUIDL\r\n              baseCss={baseCss}\r\n              basePage={basePage}\r\n              page={parsedYml}\r\n              config={config}\r\n              components={{\r\n                Button,\r\n                Image,\r\n                Input,\r\n                Label,\r\n                Div: UIDLDiv,\r\n                Select: UIDLSelect,\r\n              }}\r\n              viewportWidth={vw}\r\n              viewportHeight={vh}\r\n            />\r\n          </div>\r\n        </Panel>\r\n        <Panel xs={12} sm={6} md={7} lg={7} xl={5} item>\r\n          <Controls\r\n            device={{\r\n              selected: selectedDevice,\r\n              select: selectDevice,\r\n              selectOptions: selectDeviceOptions,\r\n            }}\r\n            page={{\r\n              selected: selectedPage,\r\n              select: selectPage,\r\n              selectOptions: selectPageOptions,\r\n            }}\r\n          />\r\n          {/* <YamlEditorToolbar /> */}\r\n          <YamlEditor value={yml} onChange={setYml} />\r\n        </Panel>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nexport interface SectionContentRowProps {\r\n  icon: React.ReactNode\r\n  title?: string\r\n  description?: string\r\n}\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  background-color: #333 !important;\r\n`\r\n\r\nconst StyledListItemText = styled(ListItemText)`\r\n  .title {\r\n    font-family: Hack, monospace;\r\n    color: #aa18c4;\r\n  }\r\n`\r\n\r\nfunction SectionContentRow({\r\n  icon,\r\n  title,\r\n  description,\r\n}: SectionContentRowProps) {\r\n  return (\r\n    <List dense>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <StyledAvatar>{icon}</StyledAvatar>\r\n        </ListItemAvatar>\r\n        <StyledListItemText\r\n          classes={{\r\n            primary: 'title',\r\n          }}\r\n          primary={title}\r\n          secondary={description}\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default SectionContentRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\r\nimport MinimizeIcon from '@material-ui/icons/Minimize'\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual'\r\nimport TitleIcon from '@material-ui/icons/Title'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport PhotoSizeSelectSmallIcon from '@material-ui/icons/PhotoSizeSelectSmall'\r\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone'\r\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact'\r\nimport BurstModeIcon from '@material-ui/icons/BurstMode'\r\nimport MouseIcon from '@material-ui/icons/Mouse'\r\nimport HttpIcon from '@material-ui/icons/Http'\r\nimport SectionContentRow from './SectionContentRow'\r\n\r\nexport interface TestProps {\r\n  //\r\n}\r\n\r\nconst StyledSectionContent = styled(Typography)``\r\n\r\nfunction Section({\r\n  label,\r\n  children,\r\n  ...rest\r\n}: {\r\n  label?: React.ReactNode\r\n  children?: React.ReactNode\r\n}) {\r\n  return (\r\n    <ExpansionPanel {...rest}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography component=\"div\">{label}</Typography>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n}\r\n\r\nconst componentKeys = [\r\n  {\r\n    icon: <RadioButtonCheckedIcon />,\r\n    title: 'button',\r\n    description: 'Resolves to a <button /> html dom element',\r\n  },\r\n  {\r\n    icon: <MinimizeIcon />,\r\n    title: 'divider',\r\n    description: 'Resolves to an <hr /> html dom element',\r\n  },\r\n  {\r\n    icon: <PhotoSizeSelectActualIcon />,\r\n    title: 'image',\r\n    description: 'Resolves to an <img /> html dom element',\r\n  },\r\n  {\r\n    icon: <TitleIcon />,\r\n    title: 'label',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <ListIcon />,\r\n    title: 'list',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n  {\r\n    icon: <PhotoSizeSelectSmallIcon />,\r\n    title: 'select',\r\n    description: 'Resolves to a <select /> html dom element',\r\n  },\r\n  {\r\n    icon: <TextRotationNoneIcon />,\r\n    title: 'textField',\r\n    description: 'Resolves to an <input /> html dom element',\r\n  },\r\n  {\r\n    icon: <ViewCompactIcon />,\r\n    title: 'view',\r\n    description: 'Resolves to a <div /> html dom element',\r\n  },\r\n]\r\n\r\nconst mouseIcon = <MouseIcon />\r\nconst functionKeys = [\r\n  {\r\n    icon: mouseIcon,\r\n    title: 'onClick',\r\n    description: 'Resolves to an onClick function',\r\n  },\r\n  {\r\n    icon: mouseIcon,\r\n    title: 'onHover',\r\n    description: 'Resolves to an onHover function',\r\n  },\r\n]\r\n\r\nconst assetKeys = [\r\n  {\r\n    icon: <BurstModeIcon />,\r\n    title: 'path',\r\n    description:\r\n      'Combines base url, appends /assets/ and concatenates path in the end',\r\n  },\r\n  {\r\n    icon: <HttpIcon />,\r\n    title: 'resource',\r\n    description:\r\n      'For some components, it\\'s set to rename it to \"src\" to support elements like <img /> during render phase',\r\n  },\r\n]\r\n\r\nfunction Test(props: TestProps) {\r\n  return (\r\n    <div>\r\n      <Section label=\"Component types\">\r\n        <StyledSectionContent>\r\n          {componentKeys.map((props, index: number) => (\r\n            <SectionContentRow key={`uidl-component${index}`} {...props} />\r\n          ))}\r\n        </StyledSectionContent>\r\n      </Section>\r\n      <Section label=\"Functions\">\r\n        <StyledSectionContent>\r\n          {functionKeys.map((props, index: number) => (\r\n            <SectionContentRow key={`uidl-function${index}`} {...props} />\r\n          ))}\r\n        </StyledSectionContent>\r\n      </Section>\r\n      <Section label=\"Assets\">\r\n        <StyledSectionContent>\r\n          {assetKeys.map((props, index: number) => (\r\n            <SectionContentRow key={`uidl-function${index}`} {...props} />\r\n          ))}\r\n        </StyledSectionContent>\r\n      </Section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test\r\n","import React from 'react'\r\nimport { AppContextValue } from './AppProvider'\r\n\r\nconst context = React.createContext<undefined | AppContextValue>(undefined)\r\n\r\nexport default context\r\n","import React from 'react'\r\nimport AuthContext from './AuthContext'\r\n\r\nexport interface AuthContextValue extends AuthContextState {\r\n  setAuthenticated?: (authenticated: boolean) => void\r\n  setCreatingAccount?: (creating: boolean) => void\r\n  setConfirmingPassword?: (confirming: boolean) => void\r\n  setPendingVCode?: (pending: boolean) => void\r\n  setVcode?: (code: string) => void\r\n  setTimedOutVCode?: (timedOut: boolean) => void\r\n  setErrorVCode?: (error: null | Error) => void\r\n}\r\n\r\nexport type AppContextAction =\r\n  | { type: 'set-authenticated'; authenticated: boolean }\r\n  | { type: 'set-vcode'; code: string }\r\n  | { type: 'set-vcode-in-process'; pending: boolean }\r\n  | { type: 'set-vcode-timed-out'; timedOut: boolean }\r\n  | { type: 'set-vcode-error'; error: null | Error }\r\n  | { type: 'set-creating-in-process'; creating: boolean }\r\n  | { type: 'set-creating-confirming-password'; confirming: boolean }\r\n\r\nexport interface AuthContextState {\r\n  authenticated: boolean\r\n  status: null | any\r\n  verification: {\r\n    code: null | string\r\n    pending: boolean\r\n    timedOut: boolean\r\n    error: null | Error\r\n  }\r\n  creating: {\r\n    pending: boolean\r\n    confirmingPassword: boolean\r\n  }\r\n}\r\n\r\nexport const initialState: AuthContextState = {\r\n  authenticated: false,\r\n  status: null,\r\n  verification: {\r\n    code: null,\r\n    pending: false,\r\n    timedOut: false,\r\n    error: null,\r\n  },\r\n  creating: {\r\n    pending: false,\r\n    confirmingPassword: false,\r\n  },\r\n}\r\n\r\nfunction reducer(\r\n  state: AuthContextState = initialState,\r\n  action: AppContextAction,\r\n): AuthContextState {\r\n  switch (action.type) {\r\n    case 'set-authenticated':\r\n      return { ...state, authenticated: action.authenticated }\r\n    case 'set-vcode':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, code: action.code },\r\n      }\r\n    case 'set-vcode-in-process':\r\n      return {\r\n        ...state,\r\n        verification: {\r\n          ...state.verification,\r\n          pending: action.pending,\r\n          timedOut: false,\r\n        },\r\n      }\r\n    case 'set-vcode-timed-out':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, timedOut: action.timedOut },\r\n      }\r\n    case 'set-vcode-error':\r\n      return {\r\n        ...state,\r\n        verification: { ...state.verification, error: action.error },\r\n      }\r\n    case 'set-creating-in-process':\r\n      return {\r\n        ...state,\r\n        creating: { ...state.creating, pending: action.creating },\r\n      }\r\n    case 'set-creating-confirming-password':\r\n      return {\r\n        ...state,\r\n        creating: { ...state.creating, confirmingPassword: action.confirming },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction AppProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n\r\n  function setAuthenticated(authenticated: boolean) {\r\n    dispatch({ type: 'set-authenticated', authenticated })\r\n  }\r\n\r\n  function setVcode(code: string) {\r\n    dispatch({ type: 'set-vcode', code })\r\n  }\r\n\r\n  function setPendingVCode(pending: boolean) {\r\n    dispatch({ type: 'set-vcode-in-process', pending })\r\n  }\r\n\r\n  function setTimedOutVCode(timedOut: boolean) {\r\n    dispatch({ type: 'set-vcode-timed-out', timedOut })\r\n  }\r\n\r\n  function setErrorVCode(err: null | Error) {\r\n    dispatch({ type: 'set-vcode-error', error: err })\r\n  }\r\n\r\n  function setCreatingAccount(creating: boolean) {\r\n    dispatch({ type: 'set-creating-in-process', creating })\r\n  }\r\n\r\n  function setConfirmingPassword(confirming: boolean) {\r\n    dispatch({ type: 'set-creating-confirming-password', confirming })\r\n  }\r\n\r\n  // Keep the authenticated state in sync with status\r\n  React.useEffect(() => {\r\n    if (!state.authenticated && state.status?.code === 0) {\r\n      // setAuthenticated(true)\r\n    }\r\n  }, [state.authenticated, state.status])\r\n\r\n  const ctx: AuthContextValue = {\r\n    ...state,\r\n    setAuthenticated,\r\n    setCreatingAccount,\r\n    setConfirmingPassword,\r\n    setVcode,\r\n    setPendingVCode,\r\n    setTimedOutVCode,\r\n    setErrorVCode,\r\n  }\r\n\r\n  return <AuthContext.Provider value={ctx}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport default AppProvider\r\n","import React from 'react'\r\nimport { initialState, AuthContextValue } from './AuthProvider'\r\n\r\nconst context = React.createContext<AuthContextValue>(initialState)\r\n\r\nexport default context\r\n","import React from 'react'\r\nimport { BaseCSS } from '@aitmed/react-uidl'\r\nimport { log } from 'utils'\r\nimport AppContext from './AppContext'\r\nimport AuthContext from './AuthContext'\r\n\r\nexport interface AppContextModalState {\r\n  name: string\r\n  opened: boolean\r\n  title: string\r\n  subtitle: string\r\n}\r\n\r\nexport interface AppContextValue extends AppContextState {\r\n  openModal?: (options?: Partial<AppContextModalState>) => void\r\n  closeModal?: (options?: Partial<AppContextModalState>) => void\r\n  setCss?: (css?: null | BaseCSS) => void\r\n}\r\n\r\nexport type AppContextAction =\r\n  | { type: 'open-modal'; modal?: any }\r\n  | { type: 'close-modal'; modal?: any }\r\n  | { type: 'set-css'; css: null | BaseCSS }\r\n\r\nexport interface AppContextState {\r\n  modal: AppContextModalState\r\n  css: null | BaseCSS\r\n}\r\n\r\nexport const initialState: AppContextState = {\r\n  modal: {\r\n    name: '',\r\n    opened: false,\r\n    title: '',\r\n    subtitle: '',\r\n  },\r\n  css: null,\r\n}\r\n\r\nfunction reducer(\r\n  state: AppContextState = initialState,\r\n  action: AppContextAction,\r\n): AppContextState {\r\n  switch (action.type) {\r\n    case 'open-modal':\r\n      return {\r\n        ...state,\r\n        modal: { ...state.modal, ...action.modal, opened: true },\r\n      }\r\n    case 'close-modal':\r\n      return {\r\n        ...state,\r\n        modal: { ...state.modal, ...action.modal, opened: false },\r\n      }\r\n    case 'set-css':\r\n      return { ...state, css: action.css }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction AppProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState)\r\n  const authCtx = React.useContext(AuthContext)\r\n\r\n  function openModal(options?: Partial<AppContextModalState>) {\r\n    dispatch({ type: 'open-modal', modal: options })\r\n  }\r\n\r\n  function closeModal(options?: Partial<AppContextModalState>) {\r\n    dispatch({ type: 'close-modal', modal: options })\r\n  }\r\n\r\n  function setCss(css: null | BaseCSS = null) {\r\n    dispatch({ type: 'set-css', css: css })\r\n  }\r\n\r\n  // Keep the authenticated state in sync with status\r\n  React.useEffect(() => {\r\n    if (authCtx && !authCtx.authenticated && authCtx.status?.code === 0) {\r\n      // setAuthenticated(true)\r\n    }\r\n  }, [authCtx])\r\n\r\n  React.useEffect(() => {\r\n    log({\r\n      msg: 'AppProviderState:',\r\n      data: state,\r\n      color: 'olive',\r\n    })\r\n  }, [state])\r\n\r\n  const ctx = {\r\n    ...state,\r\n    openModal,\r\n    closeModal,\r\n    setCss,\r\n  }\r\n\r\n  return <AppContext.Provider value={ctx}>{children}</AppContext.Provider>\r\n}\r\n\r\nexport default AppProvider\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport GlobalStyle from './app/GlobalStyle'\r\nimport App from './App'\r\nimport Test from './Test'\r\nimport AppProvider from './AppProvider'\r\nimport AuthProvider from './AuthProvider'\r\nimport * as serviceWorker from 'serviceWorker'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <AuthProvider>\r\n      <AppProvider>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={App} exact />\r\n            <Route path=\"/test\" component={Test} />\r\n            <Route path=\"/:page\" component={App} />\r\n          </Switch>\r\n        </Router>\r\n      </AppProvider>\r\n    </AuthProvider>\r\n  </>,\r\n  document.getElementById('root'),\r\n)\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}